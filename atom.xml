<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Zespia]]></title>
  <link href="http://zespia.tw/atom.xml" rel="self"/>
  <link href="http://zespia.tw"/>
  <updated>2012-10-11T12:10:49.791Z</updated>
  <id>http://zespia.tw/</id>
  <author>
    <name><![CDATA[SkyArrow]]></name>
    <email><![CDATA[tommy351@gmail.com]]></email>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[Hexo 颯爽登場！]]></title>
    <link href="http://zespia.tw/blog/2012/10/11/hexo-debut/"/>
    <id>http://zespia.tw/blog/2012/10/11/hexo-debut/</id>
    <published>2012-10-11T07:22:47.000Z</published>
    <updated>2012-10-11T09:45:20.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/ibpMKNkpRxVwsK.jpg" alt="ちり - Super sonic Child (id=29663134)">

</p>
<p>我想每個 <a href="http://octopress.org/">Octopress</a> 的使用者一定都有這樣的煩惱──隨著文章數量愈來愈多，檔案建立的速度愈來愈慢。本站目前已累積至 54 篇文章，每次建立檔案時，至少都需要花費一分鐘以上的時間。

</p>
<p>或許是因為 Ruby 天生就比較慢，而這種問題未來似乎也不會改善，<a href="https://github.com/mojombo/jekyll">Jekyll</a> 和 <a href="http://octopress.org/">Octopress</a> 已經一段時間沒有更新，那麼唯一的解決方案只有另覓其他 Blog Framework 了。

</p>
<span id="more"></span>

<h2>尋覓</h2>
<p>由於最近都在玩 Node.js，便決定從它開始下手，我試著在網路上找了一下，然而現有的 Blog Framework 看來都過於簡單；只有一個除外：<a href="https://github.com/bevry/docpad">DocPad</a>。

</p>
<p><a href="https://github.com/bevry/docpad">DocPad</a> 擴充性十足，而且一直有在更新，但是 <a href="https://github.com/bevry/docpad">DocPad</a> 又令人感覺過於複雜，難以上手。

</p>
<p><strong>參考資料</strong>：<a href="http://blog.bmannconsulting.com/node-static-site-generators/">Node based static site generators - Boris Mann</a>

</p>
<h2>造輪子</h2>
<p><img src="http://i.minus.com/iUuOEU0Yw0JbB.png" alt="">

</p>
<p>那麼唯一的方式，大概只剩自造輪子了。

</p>
<p>Prototype 的速度相當不錯，在 2 秒內即可將全站的資料都建立完成。之後的一個月，便以此為基礎擴充、加強，最後的成品即是──Hexo！

</p>
<p>你或許會好奇這篇文章的開頭為何要放一張與內容毫不相關的圖片，雖然放不相關圖片是傳統，不過這次的開頭圖片可是有關聯性的！

</p>
<p>我想 <a href="http://octopress.org/">Octopress</a> 的名稱來源也許是 Octal<em>（八進制）</em> + Press，因此我便以十六進制<em>（hexadecimal，縮寫為 hex）</em>來取名。

</p>
<p>而為啥會扯上這張圖片呢？因為 Hexo 的發音很類似於へそ<em>（肚臍）</em>。

</p>
<h2>Hexo</h2>
<p>前面扯了那麼多廢話，該來談談 Hexo 的細節了。

</p>
<p>Hexo 和 <a href="https://github.com/mojombo/jekyll">Jekyll</a>、<a href="http://octopress.org/">Octopress</a> 有許多相似點，大部分的使用都和其無異。

</p>
<h3>安裝</h3>
<p>前提是必須先安裝 Node.js，至於怎麼安裝自己 Google 吧

</p>
<pre><code class="lang-bash"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo -g</div></pre></td></tr></table></figure></code></pre>
<p>僅需一步就把 Hexo 本體和所有相依套件安裝完畢，很簡單吧？

</p>
<h3>初始化</h3>
<pre><code class="lang-bash"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">hexo init &lt;folder></div></pre></td></tr></table></figure></code></pre>
<p>如果指定 <code>&lt;folder&gt;</code>，便會在目前的資料夾建立一個名為 <code>&lt;folder&gt;</code> 的新資料夾；否則會在目前資料夾初始化。

</p>
<p>設定請參閱 <a href="https://github.com/tommy351/hexo/wiki/Configure">Wiki</a>，我還不太會寫文件，如果看不懂的話請不要鞭太大力。

</p>
<h3>佈署</h3>
<pre><code class="lang-bash"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">hexo setup_deploy &lt;repository></div></pre></td></tr></table></figure></code></pre>
<p>之後只要執行以下指令就能直接 deploy 了：

</p>
<pre><code class="lang-bash"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div></pre></td></tr></table></figure></code></pre>
<h3>建立文章、分頁</h3>
<pre><code class="lang-bash"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div></pre></td><td class="code"><pre><div class="line">hexo new_post &lt;title></div><div class="line">hexo new_page &lt;title></div></pre></td></tr></table></figure></code></pre>
<p>Hexo 已經內建一些外掛了，你可以用這些外掛快速插入元素：

</p>
<ul>
<li>Block Quote</li>
<li>Code Block</li>
<li>Gist</li>
<li>jsFiddle</li>
<li>Pull Quote</li>
<li>Vimeo</li>
<li>Youtube</li>
</ul>
<p>外掛的詳細使用方式之後會在 <a href="https://github.com/tommy351/hexo/wiki">Wiki</a> 補完。

</p>
<h3>生成檔案</h3>
<pre><code class="lang-bash"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">hexo generate</div></pre></td></tr></table></figure></code></pre>
<p>依照環境不同，速度可能會有差別，在我的電腦上需要大約 4 秒鐘。

</p>
<h3>伺服器</h3>
<pre><code class="lang-bash"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure></code></pre>
<p>伺服器會跑在 <code>http://localhost:port</code> （<code>port</code> 預設為 <code>4000</code>，可在 <code>_config.yml</code> 設定），也可以搭配 <a href="http://pow.cx/">Pow</a> 使用：

</p>
<pre><code class="lang-bash"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div></pre></td><td class="code"><pre><div class="line">cd ~/.pow</div><div class="line">ln -s /path/to/myapp</div></pre></td></tr></table></figure></code></pre>
<p>基本使用差不多就是這樣子，非常簡單。至於外掛和主題的撰寫方法，我之後會在 <a href="https://github.com/tommy351/hexo/wiki">Wiki</a> 補完，你也可以嘗試看看<a href="https://github.com/tommy351/hexo">原始碼</a>。

</p>
<h2>結論</h2>
<p><a href="http://octopress.org/">Octopress</a> 還是很棒，只是速度不夠快，我未來將會轉換到 Hexo，以下是未來的開發目標：

</p>
<ul>
<li>Windows 測試（我現在只有在 Mac 上使用過，其他平台壓根不知道能不能運作）</li>
<li>完成 <a href="https://github.com/tommy351/hexo-theme-light">Light</a> 主題（就是你目前看到的這個主題，之後我會把 Phase 移植過來並順便釋出）</li>
<li>FTP Deploy</li>
<li>後台管理功能</li>
<li>預覽伺服器</li>
<li>檔案監看</li>
<li>增加擴充性（目前僅有三種外掛：Generator、Helper 和 Renderer，未來將會增加 Preprocessor 和 Tag）</li>
</ul>
<p>如果你有興趣的話，歡迎試用看看，有任何問題的話歡迎留言。

</p>
<iframe src="http://ghbtns.com/github-btn.html?user=tommy351&repo=hexo&type=watch&count=true"
  allowtransparency="true" frameborder="0" scrolling="0" width="62px" height="20px"></iframe>]]></content>
    <category scheme="http://zespia.tw/tags%2FJavaScript" term="JavaScript"/>
    <category scheme="http://zespia.tw/tags%2FNode.js" term="Node.js"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[愛夏的煉金工房 ─ 黃昏大地之煉金術士]]></title>
    <link href="http://zespia.tw/blog/2012/09/05/atelier-ayesha/"/>
    <id>http://zespia.tw/blog/2012/09/05/atelier-ayesha/</id>
    <published>2012-09-05T10:39:00.000Z</published>
    <updated>2012-10-10T16:39:10.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/ibobbTlfxZgITW.jpg" alt="阿霞的鍊金工房 ─ 黃昏市場之煉金術士">

</p>
<p>當初看到煉金術士系列新作的名稱時，便不禁噗哧笑了出來，這名稱實在太具有台灣風味，<del>如果主角是一位提著菜籃的歐巴桑的話絕對會變神作</del>。

</p>
<span id="more"></span>

<div class="video-container">
<iframe width="560" height="315" src="http://www.youtube.com/embed/MQNuGj8cbKs" frameborder="0" allowfullscreen></iframe>
</div>

<p>本作的世界觀為即將步向毀滅的世界，所有的物資都將消耗殆盡，能稱作國家的統治組織早已瓦解，人類的繁榮時代已經落幕，過去由煉金術打造的世界，如今只剩斷垣殘壁。

</p>
<p>而主角「<strong>愛夏</strong>」居住於偏僻的遺跡旁，一個人以賣藥維生。數年前，妹妹「<strong>妮歐</strong>」在出外採集藥草的過程中失蹤了。

</p>
<p>某天，愛夏一如往常的去附近的藥草園採集時，耳中突然響起妮歐的呼喚，但是一瞬間便消失了。此時，<del>愉悅叔叔</del>「<strong>奇斯葛里夫</strong>」登場，要求愛夏學習煉金術，唯有這樣才能找回妮歐。

</p>
<p>故事從此展開，系統沒有多大變化，新增了一個日記系統，必須集得一定的點數才能寫日記（為何愛夏不直接寫就好了，這筆記是有結界嗎）。裝備煉成取消，所有的裝備都必須從魔物或任務取得，若要強化武器則是自己煉成砥石（武器） / 染料（防具），並在物品欄使用。

</p>
<p>相較於前作，這代的畫面真的變得很讚，人物模組更加精細，畫面也變得流暢許多，然而缺點就是取消了立繪、說話時的嘴型非常詭異，<del>以及闇榮的併購使得價錢提昇了一些</del>。

</p>
<p>這篇文章本來在7月時就該寫好了，不過一時發懶所以乾脆等到中文版推出時再發佈。中文版的品質很不錯，看起來似乎沒有什麼嚴重的問題。

</p>
<p><img src="http://i.minus.com/ib29BrsOQgfTkJ.jpg" alt="">

</p>
<p>原本日文版隨附的World Guide CD是奇斯，中文版幸好不再是奇斯而是琳卡了，要不然我大概會愉悅到炸。

</p>
<p>目前只玩了一輪，已經破出三種結局，但還沒掌握出製造最佳裝備的秘訣。之前買的遊戲有一些都還沒玩，所以決定先把那些遊戲破完，目前正在很努力的玩戰鬥系統爛到爆的TOV。

</p>
<h2>結局</h2>
<p>因為目前找不到CG，所以先寫出結局列表吧。

</p>
<ul>
<li>✓ 旅の終わり：第三年 3/30 時沒有滿足其他結局條件（BAD END）</li>
<li>✓ 魔法使いと錬金術士：★ベルちゃんのお手伝い★達成（貝兒 END）</li>
<li>✓ 女性発掘屋の未来：完成★レジナさんのお手伝い★達成（瑞吉娜 END）</li>
<li>そして三人で：★リンカさんのお手伝い★達成（琳卡 END）</li>
<li>ハンターライフ：★ユーリスさんのお手伝い★達成（尤利斯 END）</li>
<li>真実の探求：★2つの揺り籠★達成（奇斯 END）</li>
<li>働くおねえさん：達成一定數量任務</li>
<li>秘宝ハンター：品評會6次優勝</li>
<li>女子会！：    「★ベルちゃんのお手伝い★」「★未来の美少女★」「★牛飼いの秘密★」「★ニオとの新たな約束★」達成</li>
<li>賢者の庵：「真実の探求」「働くおねえさん」「秘宝ハンター」「女子会！」の条件を達成</li>
</ul>]]></content>
    <category scheme="http://zespia.tw/tags%2FPS3" term="PS3"/>
    <category scheme="http://zespia.tw/tags%2F%E9%81%8A%E6%88%B2" term="遊戲"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Node.js 初試 ─ Nyanko]]></title>
    <link href="http://zespia.tw/blog/2012/07/14/nodejs-nyanko/"/>
    <id>http://zespia.tw/blog/2012/07/14/nodejs-nyanko/</id>
    <published>2012-07-13T16:14:00.000Z</published>
    <updated>2012-10-10T16:37:31.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/iKst8nFEGcU8A.png" alt="">

</p>
<p>數個月前，接到了來自 <a href="http://caramel623.k2-ani.com/">卡梅爾 Anime</a> 的委託，請我重新設計一個 <a href="http://wordpress.org/">WordPress</a> 主題，因為我當時正忙著準備備審資料，因此而暫時擱置了一段時間。

</p>
<p>又過了一個月，我加入了畢籌會（畢業典禮籌劃會），忙著 <del>和妹子聊天</del> 製作畢業影片，而完全忽略了這回事。

</p>
<p>直到畢業後，我突然想起這件事，便決定開始著手進行；然而因為去年提交 <a href="http://wordpress.org/">WordPress</a> 主題一直被退件令我一直懷恨在心，我毅然決定捨棄 <a href="http://wordpress.org/">WordPress</a>，自己從頭打造一個類似於 <a href="http://wordpress.org/">WordPress</a> 的 CMS 系統。

</p>
<span id="more"></span>

<h2>序章</h2>
<p><img src="http://i.minus.com/iEfVZ8aIjqOKG.png" alt="">

</p>
<p>在進入本文之前，先說明一下何謂 <a href="http://nodejs.org/">Node.js</a> 吧：

</p>
<p><a href="http://nodejs.org/">Node.js</a> 是一個 JavaScript 函式庫，使用了 <a href="http://zh.wikipedia.org/wiki/V8_%28JavaScript%E5%BC%95%E6%93%8E%29">V8 引擎</a> 讓 JavaScript 能在伺服器上執行，其事件驅動、非阻塞式 I/O 的形式使 <a href="http://nodejs.org/">Node.js</a> 能夠高效運作，模組化的規格使其便於開發。（有錯請鞭）

</p>
<p>總而言之，<strong><a href="http://nodejs.org/">Node.js</a> 很好用</strong>。

</p>
<h2>安裝</h2>
<p><a href="http://nodejs.org/">Node.js</a> 的安裝非常簡單，只要安裝 <a href="https://github.com/creationix/nvm/">nvm</a> 及 <a href="http://npmjs.org/">npm</a> 即可。（以下以 Mac 為例）

</p>
<p><a href="https://github.com/creationix/nvm/">nvm</a> 就是類似於 <a href="https://rvm.io/">rvm</a> 的版本管理工具，可隨意安裝、替換不同的 <a href="http://nodejs.org/">Node.js</a> 版本。

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>git clone git<span class="symbol">:</span>/<span class="regexp">/github.com/creationix</span><span class="regexp">/nvm.git ~/nvm</span></div></pre></td></tr></table></figure></code></pre>
<p>安裝完後必須在 <code>.bash_profile</code> 加入以下內容才可直接使用。

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">. ~/<span class="variable">.nvm</span>/nvm<span class="variable">.sh</span></div></pre></td></tr></table></figure></code></pre>
<p>而 <a href="http://npmjs.org/">npm</a> 則是類似於 <a href="http://rubygems.org/">gem</a> 的模組管理工具，只要安裝 <a href="http://nodejs.org/">Node.js</a> 就會附贈，不需要另外安裝。

</p>
<h2>模組</h2>
<p><a href="http://nodejs.org/">Node.js</a> 雖然還是個剛起步的應用，不過已有很多的現成模組可供使用。以下是我用到的模組：

</p>
<ul>
<li><a href="http://expressjs.com/">Express</a>：處理瀏覽器請求，用它做出 <a href="http://zh.wikipedia.org/wiki/REST">REST</a> 架構簡直小菜一碟。</li>
<li><a href="http://www.senchalabs.org/connect/">Connect</a>：<a href="http://expressjs.com/">Express</a> 的基礎，<a href="http://expressjs.com/">Express</a> 的許多功能都是從 <a href="http://www.senchalabs.org/connect/">Connect</a> 借來的，不過我只是要用它的 Gzip middleware 而已。</li>
<li><a href="https://github.com/visionmedia/ejs">EJS</a>：模版引擎之一，<a href="http://nodejs.org/">Node.js</a> 預設使用 <a href="http://jade-lang.com/">Jade</a>，但是 <a href="http://jade-lang.com/">Jade</a> 實在簡潔到讓人看不懂，所以決定使用 <a href="https://github.com/visionmedia/ejs">EJS</a>。</li>
<li><a href="https://github.com/LearnBoost/stylus">Stylus</a>：本來想繼續使用 <a href="http://sass-lang.com/">Sass</a>，後來發現 <a href="https://github.com/LearnBoost/stylus">Stylus</a> 的語法更加簡潔，而且與 <a href="http://expressjs.com/">Express</a> 的配合度極加！</li>
<li><a href="https://github.com/visionmedia/nib">Nib</a>：<a href="https://github.com/LearnBoost/stylus">Stylus</a> 之於 <a href="https://github.com/visionmedia/nib">Nib</a> 猶如 <a href="http://sass-lang.com/">Sass</a> 之於 <a href="http://compass-style.org/">Compass</a>，<a href="https://github.com/visionmedia/nib">Nib</a> 內建許多方便的 CSS3 工具。</li>
<li><a href="https://github.com/kissjs/node-mongoskin">Mongoskin</a>：使用簡易的 <a href="http://www.mongodb.org/">MongoDB</a> 工具，大部分的函數都和原本的 <a href="http://www.mongodb.org/">MongoDB</a> 很像，但是可以省掉開啟和關閉連結這些麻煩的動作。原本要用 <a href="https://github.com/LearnBoost/mongoose">Mongoose</a>，但是發現它還得先設定 Scheme，這實在有夠麻煩，而且完全與 <a href="http://www.mongodb.org/">MongoDB</a> 的設計相違背，所以果斷放棄。</li>
<li><a href="https://github.com/chjj/marked/">Marked</a>：Markdown 解析器。</li>
<li><a href="https://github.com/ncb000gt/node.bcrypt.js/">Bcrypt</a>：聽說 <a href="https://github.com/ncb000gt/node.bcrypt.js/">Bcrypt</a> 是目前最安全的密碼儲存方式。</li>
<li><a href="https://github.com/andris9/Nodemailer/">Nodemailer</a>：能夠輕鬆與 Gmail 整合的寄信模組。</li>
<li><a href="https://github.com/caolan/async/">Async</a>：<a href="http://nodejs.org/">Node.js</a> 中有很多工作都是異步進行，因此造成嵌套嵌不完的窘境，我程式寫了一週才發現有這麼好用的模組 orz。</li>
<li><a href="http://momentjs.com/">Moment</a>：日期解析模組。</li>
<li><a href="https://github.com/mishoo/UglifyJS">UglifyJS</a>：JavaScript 壓縮 / 美化模組，效能和 <a href="https://developers.google.com/closure/compiler/">Google Closure Compiler</a> 有得拼。</li>
<li><a href="http://socket.io/">Socket.io</a>：超讚的 WebSocket 模組，瀏覽器支援度超讚！</li>
<li><a href="https://github.com/kcbanner/connect-mongo/">connect-mongo</a>：本來 Session 我都儲存在記憶體，但這樣似乎不適合 production 環境，所以改把 Session 儲存在 <a href="http://www.mongodb.org/">MongoDB</a>。</li>
</ul>
<p>另外附贈超好用除錯工具：

</p>
<ul>
<li><a href="https://github.com/fgnass/node-dev">node-dev</a>：偵測檔案更改，自動重啟伺服器。</li>
</ul>
<h2>存放空間</h2>
<p>基本上寫程式還是和之前一樣，都是 SAN 值不斷乘著雲霄飛車高低起伏的過程，隨著 Bug 愈來愈多，愈來愈厭惡過去的自己怎麼笨到會犯這種智障級的錯誤。

</p>
<p><strong>不過這些都不是重點。</strong>

</p>
<p>網站寫好了重點就是要有地方存放。

</p>
<p>PHP 遍地都有等著你蹂躪的免費空間。

</p>
<p>但是 Node 能用的就只有這些啊！<a href="https://github.com/joyent/node/wiki/Node-Hosting">https://github.com/joyent/node/wiki/Node-Hosting</a>

</p>
<ul>
<li><a href="http://nodester.com/">Nodester</a>：雖然免費但是一直 deploy 失敗，沒辦法安裝 <a href="https://github.com/ncb000gt/node.bcrypt.js/">bcrypt</a>。</li>
<li><a href="http://cnodejs.net/">NAE</a>：速度好慢，而且很常掛點。</li>
<li><a href="http://www.cloudfoundry.com/">Cloud Foundry</a>：沒辦法安裝 <a href="https://github.com/ncb000gt/node.bcrypt.js/">bcrypt</a>。</li>
<li><a href="http://www.dotcloud.com/">DotCloud</a>：不知道為啥總是 deploy 失敗。</li>
<li><a href="http://nodejitsu.com/">Nodejitsu</a>：只要一行 <code>jitsu deploy</code> 就能 deploy 了，但是下個月就要收費了哭哭。</li>
<li><a href="http://heroku.com/">Heroku</a>：雖然沒辦法玩 WebSocket（30 秒連線限制），但是最穩定。</li>
</ul>
<p>身為窮學生的我只能選慢吞吞的 <a href="http://heroku.com/">Heroku</a> 哭哭喔！

</p>
<blockquote>
<p>截稿前發現了 <a href="http://www.appfog.com/">AppFog</a>，是一個建構於 <a href="http://www.cloudfoundry.com/">Cloud Foundry</a> 的服務，介面很漂亮，不過還沒試用。

</p>
</blockquote>
<p>相較於 Node 而言，MongoDB 就不用煩惱了，目前我所知有兩個免費的服務。

</p>
<ul>
<li><a href="https://mongohq.com/">MongoHQ</a>：免費 16 MB</li>
<li><a href="https://mongolab.com/">MongoLab</a>：免費 240 MB</li>
</ul>
<p>明眼人都知道要選 <a href="https://mongolab.com/">MongoLab</a> 啊啊啊啊啊！！！！<del>就像胸部一樣，大一點的總是比較好啊啊啊啊啊！！！！</del>

</p>
<h2>外觀</h2>
<p>因為代碼很髒而且 Bug 一堆，所以就不在這裡獻醜了。

</p>
<p><img src="http://i.minus.com/icykBz9L04Ydf.png" alt="">

</p>
<p>後台很普通，很明顯就是抄襲 <a href="http://wordpress.org/">WordPress</a> 的沒特色主題。

</p>
<p><img src="http://i.minus.com/iiCgTOcyLp2Km.png" alt="">

</p>
<p>前台本來想做成這樣，但圖片處理實在太麻煩，這種也許比較適合平板使用？

</p>
<p><img src="http://i.minus.com/iCuLiRAi4Birx.png" alt="">

</p>
<p>因此只能改成這個樣子了，可以很明顯的看出，就跟 <a href="https://plus.google.com/">Google+</a> 一樣，頁面主體很明顯的往左偏，右邊一大片空白什麼也沒有，<del>以後可以拿來放廣告</del>。

</p>
<p><img src="http://i.minus.com/illxd31CdxXIq.png" alt="">

</p>
<p>不過這也是有原因的，搜尋列和聊天室都會從左邊滑出。

</p>
<h2>未來</h2>
<p>目前 0.0.7 版已經完成，不過尚未 deploy 至 <a href="http://heroku.com/">Heroku</a>，主要是強化快取的部分，事先儲存已渲染過的網頁，就不用在每次瀏覽時都讀取資料庫。

</p>
<p>等到 Bug 都除完之後，大概就會發佈原始碼了，我能看到那一天的到來嗎......？

</p>
<h2>後記</h2>
<p><img src="http://i.minus.com/ibqU7BQBnIPo5u.png" alt="對不起，圖片下載不完全，想看紗羽ㄋㄟㄋㄟ的請自己找吧。(id=28562767)">

</p>
<p>因為最近一個月都在忙這東西，所以網誌都放到生菇了，之後還會在寫一篇愛夏的文章，敬請期待！

</p>
<p><a href="http://nyanko.herokuapp.com/">Nyanko</a> 目前正在封測中，也許會有很多 Bug，如果找到 Bug 的話麻煩透過左側工具列上的「意見反饋」向我回報。

</p>]]></content>
    <category scheme="http://zespia.tw/tags%2FNode.js" term="Node.js"/>
    <category scheme="http://zespia.tw/tags%2FJavaScript" term="JavaScript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[私用主題 Phase]]></title>
    <link href="http://zespia.tw/blog/2012/05/02/new-theme-phase/"/>
    <id>http://zespia.tw/blog/2012/05/02/new-theme-phase/</id>
    <published>2012-05-02T01:35:00.000Z</published>
    <updated>2012-09-22T01:18:51.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/iMujOkELjjcra.png" alt="">

</p>
<p>一段時間沒更新網誌了，最近大學有了著落之後，便決定抽空寫篇文章。自從 <a href="http://zespia.tw/Octopress-Theme-Slash/index_tw.html">Slash</a> 發佈之後，使用者日漸增多，不時會有 Pull Request，大概已經有數十個網誌都選用 <a href="http://zespia.tw/Octopress-Theme-Slash/index_tw.html">Slash</a> 作為佈景主題，雖然獲得了極大的成就感，不過林北不爽「撞主題」的感覺，所以決定再製作一個屬於自己的佈景主題。

</p>
<span id="more"></span>

<p><img src="http://i.minus.com/iYr8rVrPO07gr.jpg" alt="">

</p>
<p>起初決定以星辰、銀河作為主題，但就是找不到想要的那種感覺，而我又是 Photoshop 苦手，要我自己用 Photoshop 畫出想要的那種感覺實在有點困難。

</p>
<div class="video-container"><iframe width="420" height="315" src="http://www.youtube.com/embed/RiekCHOivVE" frameborder="0" allowfullscreen></iframe></div>

<p>之後，偶然發現了一套 Android Live Wallpaper「Phase Beam」，這配色，這流暢滑順的動畫，就是我要的感覺，但是網路上只能找到 1440x1080 的圖片，作為背景圖片有點太迷你了，於是我便決定利用 HTML5 Canvas 來繪製類似 Phase Beam 的背景。

</p>
<h2>背景</h2>
<p>HTML5 Canvas 的運作方式不如想像中簡單，我花了好幾小時才勉強用得上來，特別是輻射漸層（Radial Gradient），我搞了好久才終於搞懂這鬼東西的運作方式，天殺的是哪個傢伙想出<code>createRadialGradient(x1,y1,r1,x2,y2,r2)</code>這種奇怪的鬼函數的。

</p>
<p><img src="http://i.minus.com/ibnLcNP2voPZTx.png" alt="">

</p>
<p>使用方法搞定之後，其他便簡單許多了，只要記得繪製下一格動畫前，必須先使用<code>clearRect(x,y,width,height)</code>清空 Canvas，否則便會出現如上圖的慘狀。

</p>
<h3>參考資料</h3>
<ul>
<li><a href="https://developer.mozilla.org/en/Canvas_tutorial">Canvas tutorial - MDN</a></li>
</ul>
<h2>字體</h2>
<p><img src="http://i.minus.com/iizFaxHHCWTjT.png" alt="Pontano Sans v.s. Helvetica Neue v.s. Helvetica Neue Light">

</p>
<p>整個佈景主題全都是 <a href="http://en.wikipedia.org/wiki/Helvetica#Neue_Helvetica_.281983.29">Helvetica Neue Light</a> 似乎會讓人有些視覺疲勞，於是這次加入了 <a href="http://www.google.com/webfonts/specimen/Pontano+Sans">Pontano Sans</a> 作為標題字體，<a href="http://www.google.com/webfonts/specimen/Pontano+Sans">Pontano Sans</a> 的粗細與 <a href="http://en.wikipedia.org/wiki/Helvetica#Neue_Helvetica_.281983.29">Helvetica Neue Light</a> 大致相同，不過小寫字母更窄了些。

</p>
<p><img src="http://i.minus.com/ibf2JncEj5mdzJ.png" alt="">

</p>
<p>這次除了 Logo 以外，完全改用 <a href="http://fortawesome.github.com/Font-Awesome/">Font Awesome</a> 字體作為圖示，相容性什麼的我也沒在管了，反正能支援到 IE 8+ 就夠了。

</p>
<h2>後記</h2>
<div class="video-container"><iframe width="560" height="315" src="http://www.youtube.com/embed/ZMhwixvwMUs" frameborder="0" allowfullscreen></iframe></div>

<p>Phase 還有一些部分尚未完成，不過我已經迫不及待想用了，餘下的部份就等之後慢慢補完吧。

</p>
<p>最近大學終於有了著落，空閒的時間變得更多了，也許該找份兼職來做，如果想找我設計佈景主題的話，可透過 Twitter 或 tommy351[at]gmail.com 與我洽談。最後就來一部氷菓 ED 吧，可見京阿尼砸了很多錢在賣肉上，明明只是兩位高中女生在滾床而已，卻能這麼嫵媚......。える好胸，摩耶花好腋啊。</p>]]></content>
    <category scheme="http://zespia.tw/tags%2FOctopress" term="Octopress"/>
    <category scheme="http://zespia.tw/tags%2F%E4%B8%BB%E9%A1%8C" term="主題"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[First Order]]></title>
    <link href="http://zespia.tw/blog/2012/03/16/first-order/"/>
    <id>http://zespia.tw/blog/2012/03/16/first-order/</id>
    <published>2012-03-16T13:06:00.000Z</published>
    <updated>2012-10-10T16:39:05.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/iNmV7aO65tXdE.jpg" alt="ユイザキ - ミサカとおしゃべりしよ (id=22543726)">

</p>
<p>雖然標題名為 First Order，但請不要誤會，內容與 Last Order 毫無關係，如果你還對下文抱持任何的期待的話，就 <del>當作被騙</del> 看完這篇文章吧！

</p>
<p><del>很久很久以前</del>，一位名為<strong>新堂楓</strong>的紳士向我提出了主題製作的<a href="http://zespia.tw/blog/2011/05/27/corner-theme/#comment-418034559">委託</a>，然而因學測前 <del>打混</del> 用功念書很忙所以暫時推辭掉了。事隔2個月後，當我正沈醉於學測後混到不行的頹廢生活時，一則私訊闖進了我的生活，使我再度啟動塵封已久的 <a href="http://wordpress.org/">WordPress</a>。

</p>
<span id="more"></span>

<h2>設計</h2>
<p>這次的設計主題有三大要求：

</p>
<ul>
<li><strong>加強相片呈現效果</strong>：這點在最近發佈的 <a href="http://octopress.org/">Octopress</a> 主題 <a href="http://zespia.tw/Octopress-Theme-Slash/index_tw.html">Slash</a> 已經提供了一個不錯的解決方法，<a href="http://fancyapps.com/fancybox/">Fancybox</a>，這個使用簡易、特效華麗的 <a href="http://jquery.com/">jQuery</a> 外掛大概會成為我日後製作佈景主題的必備工具。</li>
<li><strong>一眼就能看出是圈內人</strong>：雖然我也同為圈內人，但是適合圈內人的網站設計還真沒看過幾個，令我印象最深刻的大概非 <a href="http://www.dannychoo.com/">Dannychoo</a> 莫屬，然而敝人能力不足，腦袋裡的點子差不多快枯竭了，我應該找個時間翻一翻圖書館的設計雜誌。</li>
<li><strong>Key&amp;minori style</strong>：這點更加靠北了，無論是 key 社還是 minori 社的 galgame 我都沒玩過，更遑論這兩家公司的設計風格了。</li>
</ul>
<p>雖然委託人提出了上述的三大要求，不過看看就好，下文的設計風格與要求大相逕庭。

</p>
<h2>開始</h2>
<p>看完了這篇<a href="http://www.slideshare.net/EvenWu/middleman">投影片</a>後，便決定利用 <a href="http://middlemanapp.com/">Middleman</a> 這個超神速的 mockup 工具設計主題大綱，不消兩小時便做出了兩個 mockup，思索設計的過程說不定比製作 mockup 的時間還多。

</p>
<p><img src="http://i.minus.com/ibqWCsFFdSTBI.jpg" alt="">

</p>
<p>第一個主題以 <a href="https://github.com">GitHub</a> 為設計範本，從標題的銀邊應該能很明顯的看出來。

</p>
<p><img src="http://i.minus.com/iSv0ev3PogS6w.jpg" alt="">

</p>
<p>第二個主題以 <a href="http://dribbble.com/">Dribbble</a> 上的某個<a href="http://dribbble.com/shots/438559-Pointz-Map-based-service?list=tags&amp;tag=web">點子</a>為範本，搭配部分 <a href="http://www.production-ig.co.jp/">Production I.G</a> 官網的元素（雖然看不大出來）。

</p>
<p><img src="http://i.minus.com/ind9tU2HtpOTz.jpg" alt="">

</p>
<p>我曾經認真思索過如何符合「<strong>一眼就能看出是圈內人</strong>」的要求，因此參考了<a href="http://www.kyotoanimation.co.jp/">京都アニメーション</a>與 <a href="http://www.production-ig.co.jp/">Production I.G</a> 的網站，現今的動畫官網真是做得愈來愈棒了，特別是 <a href="http://www.guilty-crown.jp/">Guilty Crown</a> 的官網，華麗之餘還能包含許多 HTML5 要素。（不過那毫無章法的劇情是另一回事）

</p>
<h2>套版</h2>
<p>最後委託人底定第二個主題為設計大綱，套版相對於設計簡單多了，只要將過去私用的「Corner 2G」（之後或許會釋出）稍微修改即可使用。

</p>
<p><img src="http://i.minus.com/ibirM2wk04UGpk.jpg" alt="少數派鍵っ子系學園の新堂楓 - keyfans.net">

</p>
<p>「Linor」至此終於製作完成，除了支援所有 WordPress 3.0 的功能以外，還附帶以下功能：

</p>
<ul>
<li>頁數切換</li>
<li>Comment Quicktags</li>
<li>留言引用</li>
<li><a href="http://fancyapps.com/fancybox/">Fancybox</a>（委託人使用的是<a href="http://floatboxjs.com/">Floatbox</a>）</li>
<li>Responsive Design</li>
</ul>
<p>經過委託人同意後，決定將本主題公開發佈：<a href="http://zespia.tw/themes/linor/linor-1.0.5.zip">Linor (1.0.5)</a>

</p>
<h2>後記</h2>
<p>再度接觸 <a href="http://wordpress.org/">WordPress</a>，發現 <a href="http://wordpress.org/">WordPress</a> 比起 <a href="http://octopress.org/">Octopress</a>，實在臃腫許多，就算架在本機也讓人感覺速度很慢，不過內建了很多方便的函數，使得開發速度大幅提昇。

</p>
<p>製作他人委託的主題並不像自己創作一樣容易，必須考慮到委託人的要求、感受，我覺得這次的成品並不夠完美，希望未來的合作能夠更加完美！

</p>]]></content>
    <category scheme="http://zespia.tw/tags%2FWordPress" term="WordPress"/>
    <category scheme="http://zespia.tw/tags%2F%E4%B8%BB%E9%A1%8C" term="主題"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Windows 8 Consumer Preview 試玩]]></title>
    <link href="http://zespia.tw/blog/2012/03/03/windows-8-preview/"/>
    <id>http://zespia.tw/blog/2012/03/03/windows-8-preview/</id>
    <published>2012-03-03T11:54:00.000Z</published>
    <updated>2012-10-10T16:36:09.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/iQ6n16BPfbQc.jpg" alt="">

</p>
<p>前些日子，微軟發佈了 <a href="http://windows.microsoft.com/en-US/windows-8/iso">Windows 8 Consumer Preview</a>，雖然名稱有點冗長，不過內容和以往一樣，是給無聊人專用的測試版。

</p>
<ul>
<li>下載：<a href="http://windows.microsoft.com/en-US/windows-8/iso"><a href="http://windows.microsoft.com/en-US/windows-8/iso">http://windows.microsoft.com/en-US/windows-8/iso</a></a></li>
<li>序號：<code>DNJXJ-7XBW8-2378T-X22TX-BKG7J</code></li>
</ul>
<p>身為一名無聊高中生的我，ISO 檔一釋出便立刻下載，然而 Windows 8 並沒有符合我的期待。（軟粉不要打我）

</p>
<span id="more"></span>

<h2>安裝</h2>
<p><img src="http://i.minus.com/iTEEu9lwJJUIR.png" alt="">

</p>
<p>因為懶得切硬碟，所以這次使用虛擬機安裝 Windows 8，安裝過程非常順利，從初始化、設定 Windows Live 帳號到進入桌面，總共僅需花費20分鐘，與過去安裝作業系統至少得花費一小時的經驗截然不同。

</p>
<h2>操作</h2>
<p>Windows 8 為了進軍平板，因此預設了許多手勢操作，不過我沒有平板電腦，所以下文僅說明滑鼠操作。

</p>
<p><img src="http://i.minus.com/igXOsyXp5ijuN.jpg" alt="滑鼠移入左上角向下滑（或左下角向上滑），可檢視最近開啟的應用程式，點擊右鍵可關閉程式">

</p>
<p>滑鼠沒有手勢操作，取而代之的是四個角落的「熱點」（類似 Mac），滑鼠移到四個角落就可觸發動作：

</p>
<ul>
<li>右上角、右下角：Charms Bar</li>
<li>左上角、左下角：最近使用的應用程式</li>
</ul>
<p><img src="http://i.minus.com/ivmhqFbt2vH0J.jpg" alt="控制台內的個人化選項仍相當簡陋，Start頁面只能設定顏色及花樣">

</p>
<p><img src="http://i.minus.com/iMopK01eyddai.jpg" alt="">

</p>
<p>Metro UI 的背景圖片無法自由設定，只有預設的幾種顏色及花樣可供選擇，唯一能設定桌布的地方只有傳統介面與鎖定畫面；動態磚（tiles）拖曳可移動位置，點右鍵可選擇取消釘選、移除應用程式、縮小或關閉動態磚上的聯播。

</p>
<p><img src="http://i.minus.com/iSauWVBV4u3fy.jpg" alt="">

</p>
<p>使用 Metro UI 的應用程式時，點擊右鍵可顯示功能表，透過 Charms Bar 內的 Share 可將目前瀏覽的內容分享至其他應用程式或 SNS，當滑鼠移至畫面上方時，會顯示拖曳圖示：

</p>
<ul>
<li>拖曳至兩側：釘選應用程式，可同時使用其他應用程式</li>
<li>拖曳至下方：關閉應用程式</li>
</ul>
<h2>使用體驗</h2>
<p>一進入桌面，映入眼簾的便是與 Developer Preview 大致相同的 Metro UI，以及幾個新的應用程式，大幅簡化的介面看起來相當不錯，然而以滑鼠操作實在不便。

</p>
<p><img src="http://i.minus.com/iQsxP5YdP3WKC.jpg" alt="熟悉的「開始」選單被右側的Charms Bar取而代之">

</p>
<p>Windows Phone 7 上的 Metro UI 非常棒，簡潔、順暢、易操作；然而到了桌面系統就顯然不是如此了，Windows 8 上的 Metro UI 一開始讓人完全摸不著頭緒，我曾經不小心進入 Explorer，之後花了好一段時間才知道如何回到 Start 頁面，微軟應先在進入作業系統前教育使用者如何操作，或是想一個更直覺的點子。

</p>
<p>此外，從 Explorer 開啟檔案時，預設應用程式設定為 Metro UI，未事先設定的話，光是看個影片、聽個音樂就必須在兩種介面之前互相切換，比以前麻煩多了。

</p>
<p><img src="http://i.minus.com/iMIktqXqEclXn.jpg" alt="為啥預設字體還是新細明體啊！">

</p>
<p>Windows 8 改了許多東西，然而爛到爆的字體渲染仍原封不動的保留，我不了解微軟到底他奶奶的在想什麼，把預設字體改成微軟正黑體有這麼困難嗎？改進那個渣到爆的<a href="http://zh.wikipedia.org/wiki/ClearType">ClearType</a>有這麼困難嗎？

</p>
<p><img src="http://i.minus.com/iWdgrcTVUToVC.jpg" alt="">

</p>
<p>唯一令人欣慰的是，IE 10 的分數大幅增加，HTML5 Test 的分數高達 309 分，真是網頁設計者的一大福音！（還是得再罵一次，<strong>去你媽的IE 6</strong>）

</p>
<h2>結論</h2>
<p>Windows 8 Consumer Preview 讓人感覺不太好用，就像是將 Metro UI 故意強加在Windows 7上，Metro UI 雖然美觀，卻失去了 Windows 7 的操作直覺性，希望微軟未來能改進傳統介面與 Metro UI 的整合性，<del>讓我們一起期待<a href="http://www.apple.com/macosx/mountain-lion/">Mountain Lion</a>吧</del>！</p>]]></content>
    <category scheme="http://zespia.tw/tags%2FWindows" term="Windows"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[HTML5 audio 實驗]]></title>
    <link href="http://zespia.tw/blog/2012/02/04/lab-html5-audio/"/>
    <id>http://zespia.tw/blog/2012/02/04/lab-html5-audio/</id>
    <published>2012-02-04T05:29:00.000Z</published>
    <updated>2012-10-10T16:38:49.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/inE9d4C1xPbYD.png" alt="">

</p>
<p>寒假即將結束，不巧膝蓋突然中了一箭，便決定實驗 HTML5 <code>audio</code>標籤的效果，雖然已有 <a href="http://jplayer.org/">jPlayer</a> 這款輕便好用的播放器，但不折騰一下就沒辦法消磨時間了，所以本次的實驗品完全由我操刀。

</p>
<span id="more"></span>

<h2>開始之前</h2>
<p>首先必須了解<code>audio</code>標籤的使用方式：

</p>
<pre><code class="lang-html"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">audio</span> <span class="attribute">controls</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">source</span> <span class="attribute">src</span>=<span class="value">"music.mp3"</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">source</span> <span class="attribute">src</span>=<span class="value">"music.ogg"</span>></span></div><div class="line"><span class="tag">&lt;/<span class="title">audio</span>></span></div></pre></td></tr></table></figure></code></pre>
<p>輸入以上代碼後，便可在網頁中看到瀏覽器內建的播放器。每種瀏覽器支援的播放類型不一，最保險的方法是備妥<code>mp3</code>、<code>ogg</code>。

</p>
<p>為了浪費時間，當然不可能用瀏覽器的預設介面，所以刪除<code>controls</code>屬性，透過 JavaScript 操作：

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> audio = document.getElementsByTagName(<span class="string">'audio'</span>)[<span class="number">0</span>];</div><div class="line"><span class="comment">// 播放</span></div><div class="line">audio.play();</div><div class="line"><span class="comment">// 暫停</span></div><div class="line">audio.pause();</div></pre></td></tr></table></figure></code></pre>
<p>只需要懂這兩個函數，就可製作最基礎的播放器了，其他複雜的指令可參閱文末的參考出處。

</p>
<h2>介面</h2>
<p>寫網頁時，比起最重要的 JavaScript，我習慣先寫 CSS，最初的參考範本是 Mac 的 <a href="http://zh.wikipedia.org/wiki/Cover_Flow">CoverFlow</a>。

</p>
<p><img src="http://i.minus.com/ibtVhj6FYs9Hvw.png" alt="">

</p>
<p>經過一連串絞盡腦汁，寫了一堆亂七八糟的 CSS 之後，成品如下。

</p>
<p><img src="http://i.minus.com/iXoN5AU2JBOHU.png" alt="">

</p>
<p>無論是倒影、中間的圓圈進度表都與<a href="http://zh.wikipedia.org/wiki/Cover_Flow">CoverFlow</a>非常相像，但這種樣式實在 <del>太麻煩了</del> 不便使用者操作，所以從<a href="http://www.premiumpixels.com/freebies/compact-music-player-psd/">Premium Pixels</a>偷點子過來，稍微加油添醋一下，完成了播放器介面 Ver. 2。

</p>
<p><img src="http://i.minus.com/imrTH5W7km1vj.png" alt="Ver.2 與 Ver.1 完全不像？這種事情不重要啦！">

</p>
<h2>核心</h2>
<p>介面完成自爽一下之後，就得面對麻煩的 JavaScript 了，播放、暫停非常簡單，按鈕按下去執行鄉對應的動作即可，然而音量調整與進度條該如何處理呢？

</p>
<p>雖然本次的重點是<strong>消磨時間</strong>，但再去造一個輪子實在他媽的太累了，於是 <del>聰明如我</del> 請到了 <a href="http://jqueryui.com/">jQuery UI</a>，Slider 功能壓縮後需要約 20KB 的空間，有點龐大不過方便就好。

</p>
<p>時間的控制方式如下，單位為秒數，例如跳至第 100 秒的位置：

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">audio.currentTime = <span class="number">100</span>;</div></pre></td></tr></table></figure></code></pre>
<p>音量的控制方式如下，範圍為 0~1，例如將音量調整至一半大小：

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">audio.volume = <span class="number">0.5</span>;</div></pre></td></tr></table></figure></code></pre>
<p><code>audio</code>可綁定<code>play</code>, <code>pause</code>, <code>ended</code>, <code>progress</code>, <code>canplay</code>, <code>timeupdate</code>等事件。<code>play</code>與<code>pause</code>如字面上意思，分別為播放、暫停後生效。

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div></pre></td><td class="code"><pre><div class="line">audio.addEventListener(<span class="string">'play'</span>, <span class="keyword">function</span>(){</div><div class="line">    play.title = <span class="string">'pause'</span>;</div><div class="line">}, <span class="literal">false</span>);</div><div class="line">audio.addEventListener(<span class="string">'pause'</span>, <span class="keyword">function</span>(){</div><div class="line">    play.title = <span class="string">'play'</span>;</div><div class="line">}, <span class="literal">false</span>);</div></pre></td></tr></table></figure></code></pre>
<p><code>ended</code>為結束後生效，當音樂結束後，可透過此事件讓時間歸零。

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div></pre></td><td class="code"><pre><div class="line">audio.addEventListener(<span class="string">'ended'</span>, <span class="keyword">function</span>(){</div><div class="line">    <span class="keyword">this</span>.currentTime = <span class="number">0</span>;</div><div class="line">}, <span class="literal">false</span>);</div></pre></td></tr></table></figure></code></pre>
<p>當音樂檔案開始載入後，便會啟動<code>progress</code>事件，可透過此事件監測下載進度。Firefox 可能會發生問題，建議搭配<code>durationchange</code>事件使用。

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div></pre></td><td class="code"><pre><div class="line">audio.addEventListener(<span class="string">'progress'</span>, <span class="keyword">function</span>(){</div><div class="line">    <span class="keyword">var</span> endVal = <span class="keyword">this</span>.seekable &amp;&amp; <span class="keyword">this</span>.seekable.length ? <span class="keyword">this</span>.seekable.end(<span class="number">0</span>) : <span class="number">0</span>;</div><div class="line">    buffer.style.width = (<span class="number">100</span> / (<span class="keyword">this</span>.duration || <span class="number">1</span>) * endVal) + <span class="string">'%'</span>;</div><div class="line">}, <span class="literal">false</span>);</div></pre></td></tr></table></figure></code></pre>
<p>當音樂下載到一定程度後，<code>canplay</code>事件便會生效，一般會透過此事件初始化播放器。相同類型的事件還有很多，依照啟動順序分別為：<code>loadstart</code>, <code>durationchange</code>, <code>loadeddata</code>, <code>progress</code>, <code>canplay</code>, <code>canplaythrough</code>。

</p>
<p><code>timeupdate</code>會在音樂播放時不斷生效，可透過此事件更新時間。

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div></pre></td><td class="code"><pre><div class="line">audio.addEventListener(<span class="string">'timeupdate'</span>, <span class="keyword">function</span>(){</div><div class="line">    progress.style.width = (<span class="keyword">this</span>.currentTime / <span class="keyword">this</span>.duration) * <span class="number">100</span> + <span class="string">'%'</span>;</div><div class="line">}, <span class="literal">false</span>);</div></pre></td></tr></table></figure></code></pre>
<h2>播放列表</h2>
<p>一個播放器的基礎功能就此完成，能夠播放、暫停、調整音量、調整時間。但這顯然還不夠，播放列表對於播放器而言相當重要。<em>（大概啦）</em>

</p>
<p><img src="http://i.minus.com/inE9d4C1xPbYD.png" alt="不要吐槽為啥播放列表裡全是動漫歌，林北就是宅啦...">

</p>
<p>與自己的邏輯奮戰大約一晚後，有播放列表、隨機播放、重複播放（單首、全部）功能的播放器於焉完成。只需要 214 行、約 6KB 的代碼<em>（未壓縮）</em>即可完成，應該能算是輕便簡易了。

</p>
<h2>後記</h2>
<p>播放列表的製作過程有點髒，中途還重構了幾次，所以直接看範例應該會比較快，若對於範例內的程式碼感到疑惑，可在下方留言。

</p>
<p>範例內已設定了一些參數，可在<code>js/script.js</code>內更改。第 5 行的<code>continous</code>參數為連續播放，第6行的<code>autoplay</code>參數為自動播放，第7行的<code>playlist</code>陣列請自行設定，壓縮檔內<strong>不會</strong>附帶範例內的音樂檔案。<code>playlist</code>陣列的格式如下：

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> playlist = [</div><div class="line">    {</div><div class="line">        title: <span class="string">'Tell Your World'</span>,</div><div class="line">        artist: <span class="string">'livetune feat.初音ミク'</span>,</div><div class="line">        album: <span class="string">'Tell Your World'</span>,</div><div class="line">        cover: <span class="string">'cover/tell_your_world.jpg'</span>,</div><div class="line">        mp3: <span class="string">'music/tell_your_world.mp3'</span>,</div><div class="line">        ogg: <span class="string">'music/tell_your_world.ogg'</span></div><div class="line">    }</div><div class="line">];</div></pre></td></tr></table></figure></code></pre>
<p><code>title</code>為標題，<code>artist</code>為演出者，<code>album</code>為專輯名稱，<code>cover</code>為專輯封面的路徑，<code>mp3</code>、<code>ogg</code>分別為音樂檔案的路徑，建議備妥兩種格式的檔案，<del>要不然 Firefox 和 Opera 不就只能去死了嗎？</del>

</p>
<p>因為做到最後頭腦快爆炸了，懶得做 Flash fallback，<del>IE 請去死一死吧。</del>

</p>
<p><a href="http://zespia.tw/lab/coverart">範例</a>｜<a href="http://zespia.tw/lab/coverart/example.zip">下載</a>

</p>
<h2>參考出處</h2>
<ul>
<li><a href="http://jplayer.org/">jPlayer</a></li>
<li><a href="http://blog.darkthread.net/post-2011-05-15-html5-audio.aspx">小試HTML 5 audio - 黑暗執行緒</a></li>
<li><a href="https://developer.mozilla.org/en/Using_HTML5_audio_and_video">Using HTML5 audio and video - MDN</a></li>
<li><a href="http://net.tutsplus.com/tutorials/html-css-techniques/html5-audio-and-video-what-you-must-know/">HTML5 Audio and Video: What you Must Know | Nettuts+</a></li>
<li><a href="http://www.premiumpixels.com/freebies/compact-music-player-psd/">Free PSD: Compact Music Player | Premium Pixels</a></li>
</ul>]]></content>
    <category scheme="http://zespia.tw/tags%2FJavaScript" term="JavaScript"/>
    <category scheme="http://zespia.tw/tags%2FHTML5" term="HTML5"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Slash — 專為 Octopress 設計的極簡主題]]></title>
    <link href="http://zespia.tw/blog/2012/01/25/slash-theme/"/>
    <id>http://zespia.tw/blog/2012/01/25/slash-theme/</id>
    <published>2012-01-25T08:27:00.000Z</published>
    <updated>2012-10-11T07:07:47.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/i8oyJmY5lRJEJ.png" alt="">

</p>
<p><a href="http://octopress.org/">Octopress</a> 雖然預設主題相當漂亮，支援眾多 HTML5 的新特性，但每個網誌都是同一個主題，令人有些厭煩。在決定轉移到 <a href="http://octopress.org/">Octopress</a> 的第一刻起，我就開始著手設計適用於 <a href="http://octopress.org/">Octopress</a> 的主題，在今天終於把檔案整理完畢，集合成一個獨立的 repo。

</p>
<span id="more"></span>

<p>做為一個 <a href="http://octopress.org/">Octopress</a> 主題，當然不能輸給原本的預設主題，Slash 擁有以下特性：

</p>
<ul>
<li>自動讀取圖片的<code>alt</code>屬性，並在圖片下方顯示註解。</li>
<li>內建 <a href="http://fancyapps.com/fancybox/">Fancybox</a>，讓您輕鬆展示您的作品。</li>
<li>自動將 HTML5 <code>video</code>、<code>iframe</code>、<code>object</code>等嵌入式影片縮放至頁面寬度。</li>
<li>支援 responsive layouts，無論電腦、手機、平板都能獲得極佳的使用體驗。</li>
<li><a href="http://zespia.tw/Octopress-Theme-Slash/index_tw.html">更多介紹…</a></li>
</ul>
<h2>安裝</h2>
<p>只需在終端機輸入以下指令，即可完成安裝：

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>cd octopress</div><div class="line"><span class="variable">$ </span>git clone git<span class="symbol">:</span>/<span class="regexp">/github.com/tommy</span>351/<span class="constant">Octopress</span>-<span class="constant">Theme</span>-<span class="constant">Slash</span>.git .themes/slash</div><div class="line"><span class="variable">$ </span>rake install[<span class="string">'slash'</span>]</div><div class="line"><span class="variable">$ </span>rake generate</div></pre></td></tr></table></figure></code></pre>
<p>使用 zsh 時發生問題嗎？試試看<code>rake install\[&#39;slash&#39;\]</code>。

</p>
<h2>Q&amp;A</h2>
<h3>如何顯示右上角的Facebook連結？</h3>
<p>在<code>_config.yml</code>新增<code>facebook_user</code>參數，並填入您的 Facebook ID。

</p>
<h3>如何編輯選單？</h3>
<p>編輯<code>slash</code>→<code>source</code>→<code>_includes</code>→<code>custom</code>→<code>navigation.html</code>。

</p>
<h3>如何隱藏頁首的Twitter訊息串？</h3>
<p>刪除<code>slash</code>→<code>source</code>→<code>_layouts</code>→<code>default.html</code>的第 6 行。

</p>
<h3>如何關閉Fancybox？</h3>
<ol>
<li>刪除<code>slash</code>→<code>source</code>→<code>_includes</code>→<code>after_footer.html</code>的第 4 行。</li>
<li>刪除<code>slash</code>→<code>source</code>→<code>javascripts</code>→<code>caption.js</code>第 14 行。</li>
</ol>
<p>如果還有其他問題或建議，歡迎在以下留言。

</p>]]></content>
    <category scheme="http://zespia.tw/tags%2F%E4%B8%BB%E9%A1%8C" term="主題"/>
    <category scheme="http://zespia.tw/tags%2FOctopress" term="Octopress"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[如何利用 CSS 製作多級選單？]]></title>
    <link href="http://zespia.tw/blog/2012/01/24/css-multi-level-menu/"/>
    <id>http://zespia.tw/blog/2012/01/24/css-multi-level-menu/</id>
    <published>2012-01-24T00:00:00.000Z</published>
    <updated>2012-09-22T01:22:59.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/ibx37Gknqf5wtK.PNG" alt="一般常見的選單">

</p>
<p>選單常見於我們的生活當中，通常用於整理一系列的指令，簡化複雜的程序，使介面看起來更加友善。當應用程式愈複雜，功能愈多時，通常會利用多級選單將類似的指令組織成一個子選單。

</p>
<p>一般網頁常見到二級選單，利用 CSS 即可達成，有些會透過 JavaScript 增加更多效果，例如動畫、延遲等。多級選單一般常使用 JavaScript 達成，不過透過 CSS 也能做出簡單的多級選單。

</p>
<span id="more"></span>

<h3>HTML</h3>
<pre><code class="lang-html"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div><div class="line-number">15</div><div class="line-number">16</div><div class="line-number">17</div><div class="line-number">18</div><div class="line-number">19</div><div class="line-number">20</div><div class="line-number">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">nav</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">ul</span>></span></div><div class="line">        <span class="tag">&lt;<span class="title">li</span>></span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">""</span>></span>選單 1<span class="tag">&lt;/<span class="title">a</span>></span><span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">        <span class="tag">&lt;<span class="title">li</span>></span></div><div class="line">            <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">""</span>></span>選單 2<span class="tag">&lt;/<span class="title">a</span>></span></div><div class="line">            <span class="tag">&lt;<span class="title">ul</span>></span></div><div class="line">                <span class="tag">&lt;<span class="title">li</span>></span></div><div class="line">                    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">""</span>></span>選單 2-1<span class="tag">&lt;/<span class="title">a</span>></span></div><div class="line">                    <span class="tag">&lt;<span class="title">ul</span>></span></div><div class="line">                        <span class="tag">&lt;<span class="title">li</span>></span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">""</span>></span>選單 2-1-1<span class="tag">&lt;/<span class="title">a</span>></span><span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">                        <span class="tag">&lt;<span class="title">li</span>></span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">""</span>></span>選單 2-1-2<span class="tag">&lt;/<span class="title">a</span>></span><span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">                    <span class="tag">&lt;/<span class="title">ul</span>></span></div><div class="line">                <span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">                <span class="tag">&lt;<span class="title">li</span>></span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">""</span>></span>選單 2-2<span class="tag">&lt;/<span class="title">a</span>></span><span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">                <span class="tag">&lt;<span class="title">li</span>></span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">""</span>></span>選單 2-3<span class="tag">&lt;/<span class="title">a</span>></span><span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">            <span class="tag">&lt;/<span class="title">ul</span>></span></div><div class="line">        <span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">        <span class="tag">&lt;<span class="title">li</span>></span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">""</span>></span>選單 3<span class="tag">&lt;/<span class="title">a</span>></span><span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">        <span class="tag">&lt;<span class="title">li</span>></span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">""</span>></span>選單 4<span class="tag">&lt;/<span class="title">a</span>></span><span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">    <span class="tag">&lt;/<span class="title">ul</span>></span></div><div class="line"><span class="tag">&lt;/<span class="title">nav</span>></span></div></pre></td></tr></table></figure></code></pre>
<p>選單的 HTML 如上，所有的選單物件都是可點選的連結，理論上無限層級。

</p>
<h3>CSS</h3>
<pre><code class="lang-css"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div><div class="line-number">15</div><div class="line-number">16</div><div class="line-number">17</div><div class="line-number">18</div><div class="line-number">19</div><div class="line-number">20</div><div class="line-number">21</div><div class="line-number">22</div><div class="line-number">23</div><div class="line-number">24</div><div class="line-number">25</div><div class="line-number">26</div><div class="line-number">27</div></pre></td><td class="code"><pre><div class="line"><span class="tag">ul</span> <span class="tag">li</span> <span class="rules">{</div><div class="line">  <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span>;</span> <span class="comment">/* 使子選單依照母選單的座標顯示 */</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="comment">/* 設定母選單的連結樣式 */</span></div><div class="line"><span class="tag">ul</span> <span class="tag">li</span> <span class="tag">a</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url(detail.png)</span></span>;</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="comment">/* 當母選單下沒有子選單時，也就是說只有一個連結時，隱藏detail.png */</span></div><div class="line"><span class="tag">ul</span> <span class="tag">li</span> <span class="tag">a</span><span class="pseudo">:only-child</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">background</span>:<span class="value"> none</span>;</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="tag">ul</span> <span class="tag">li</span><span class="pseudo">:hover</span> > <span class="tag">ul</span> <span class="rules">{</div><div class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span>;</span> <span class="comment">/* 滑鼠滑入母選單後，顯示子選單 */</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="comment">/* 二級選單顯示於一級選單的正下方 */</span></div><div class="line"><span class="tag">ul</span> <span class="tag">ul</span> <span class="rules">{</div><div class="line">  <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span>;</span></div><div class="line">  <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">100</span>%</span>;</span></div><div class="line">  <span class="rule"><span class="attribute">list-style</span>:<span class="value"> none</span>;</span></div><div class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> none</span>;</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="comment">/* 三級選單則顯示於二級選單的右方 */</span></div><div class="line"><span class="tag">ul</span> <span class="tag">ul</span> <span class="tag">ul</span> <span class="rules">{</div><div class="line">  <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span>;</span></div><div class="line">  <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">100</span>%</span>;</span></div><div class="line">  <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">0</span></span>;</span></div><div class="line"><span class="rule">}</span></span></div></pre></td></tr></table></figure></code></pre>
<p>這樣就完成了所有步驟，不需要繁複的 JavaScript，是不是很簡單呢？

</p>
<p><a href="http://zespia.tw/demo/css-multi-level-menu/">範例</a>｜<a href="http://zespia.tw/demo/css-multi-level-menu/example.zip">下載</a>

</p>
<h2>後記</h2>
<p><img src="http://i.minus.com/ibbaIEKvPdl6Pc.jpg" alt="">

</p>
<p>寫到最後反而發現詞窮，看來我真不是寫文章的料。總而言之，這是「大概很簡單」教學系列的第二彈，感謝你的收看！</p>]]></content>
    <category scheme="http://zespia.tw/tags%2FCSS" term="CSS"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[如何利用 jQuery 製作頁籤？]]></title>
    <link href="http://zespia.tw/blog/2012/01/21/jquery-tabs/"/>
    <id>http://zespia.tw/blog/2012/01/21/jquery-tabs/</id>
    <published>2012-01-21T10:10:00.000Z</published>
    <updated>2012-10-10T16:38:54.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/i3hFGFugcShjF.jpg" alt="在文章中放入不相干的圖片好像已經成為定番？隨便啦">

</p>
<p>最近花了一週的時間，終於完成 Octopress 的佈景主題，並搬移舊站（zespia.twbbs.org）的文章及留言，發現自已以前的文章實在有夠中二，看得連自己都想揍螢幕，於是偷偷撤下了部分文章。

</p>
<p>為了慶祝新站落成，便決定寫一篇超級簡易（大概啦）的 jQuery 頁籤製作教學，<del>懷著感恩的心看吧！</del>

</p>
<span id="more"></span>

<p><strong>本文以 jQuery 1.7.1 為例。</strong>

</p>
<h2>基礎</h2>
<h3>HTML</h3>
<pre><code class="lang-html"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">ul</span> <span class="attribute">id</span>=<span class="value">"tabs"</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"enable"</span>></span>頁籤 1<span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">li</span>></span>頁籤 2<span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">li</span>></span>頁籤 3<span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">li</span>></span>頁籤 4<span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line"><span class="tag">&lt;/<span class="title">ul</span>></span></div><div class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"contents"</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">div</span>></span>頁籤 1 的內容<span class="tag">&lt;/<span class="title">div</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">div</span>></span>頁籤 2 的內容<span class="tag">&lt;/<span class="title">div</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">div</span>></span>頁籤 3 的內容<span class="tag">&lt;/<span class="title">div</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">div</span>></span>頁籤 4 的內容<span class="tag">&lt;/<span class="title">div</span>></span></div><div class="line"><span class="tag">&lt;/<span class="title">div</span>></span></div></pre></td></tr></table></figure></code></pre>
<p>以<code>ul#tabs</code>當作標籤，而<code>#contents</code>內則是頁籤內容。我盡可能簡化 HTML 中不必要的欄位，其他功能都將在 JS 中實現。

</p>
<h3>CSS</h3>
<pre><code class="lang-css"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div><div class="line-number">15</div><div class="line-number">16</div><div class="line-number">17</div><div class="line-number">18</div><div class="line-number">19</div><div class="line-number">20</div><div class="line-number">21</div><div class="line-number">22</div><div class="line-number">23</div><div class="line-number">24</div><div class="line-number">25</div><div class="line-number">26</div><div class="line-number">27</div><div class="line-number">28</div><div class="line-number">29</div><div class="line-number">30</div><div class="line-number">31</div></pre></td><td class="code"><pre><div class="line"><span class="id">#tabs</span> <span class="tag">li</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#ddd</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1</span>px solid <span class="hexcolor">#ccc</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">border-bottom</span>:<span class="value"> none</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">display</span>:<span class="value"> inline-block</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">margin-right</span>:<span class="value"> <span class="number">5</span>px</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">5</span>px <span class="number">10</span>px</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#999</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">cursor</span>:<span class="value"> pointer</span>;</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="id">#tabs</span> <span class="tag">li</span><span class="pseudo">:hover</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#666</span></span>;</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="id">#tabs</span> <span class="tag">li</span><span class="class">.enable</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">border-bottom</span>:<span class="value"> <span class="number">1</span>px solid <span class="hexcolor">#ddd</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">margin-bottom</span>:<span class="value"> -<span class="number">1</span>px</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#333</span></span>;</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="id">#contents</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#ddd</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1</span>px solid <span class="hexcolor">#ccc</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> <span class="number">0</span> <span class="number">0</span> <span class="number">16</span>px <span class="hexcolor">#ccc</span></span>;</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="id">#contents</span> > <span class="tag">div</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">display</span>:<span class="value"> none</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">text-align</span>:<span class="value"> justify</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">10</span>px <span class="number">15</span>px</span>;</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="id">#contents</span> > <span class="tag">div</span><span class="pseudo">:first-of-type</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span>;</span></div><div class="line"><span class="rule">}</span></span></div></pre></td></tr></table></figure></code></pre>
<h3>JS</h3>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div></pre></td><td class="code"><pre><div class="line">(<span class="keyword">function</span>($){</div><div class="line">    <span class="comment">// 用each遍歷頁籤</span></div><div class="line">    $(<span class="string">'#tabs li'</span>).each(<span class="keyword">function</span>(i){</div><div class="line">        <span class="keyword">var</span> _i = i;</div><div class="line">        <span class="comment">// 綁定click事件到頁籤上，若要改為滑鼠移入切換頁籤的話，將click改為mouseenter</span></div><div class="line">        $(<span class="keyword">this</span>).click(<span class="keyword">function</span>(){</div><div class="line">            <span class="comment">// 移除其他頁籤的class，並將class新增至所選頁籤</span></div><div class="line">            $(<span class="keyword">this</span>).parent().children().removeClass(<span class="string">'enable'</span>).eq(_i).addClass(<span class="string">'enable'</span>);</div><div class="line">            <span class="comment">// 隱藏其他頁籤的內容，並顯示所選頁籤的內容</span></div><div class="line">            $(<span class="string">'#contents'</span>).children(<span class="string">'div'</span>).hide().eq(_i).show();</div><div class="line">        });</div><div class="line">    });</div><div class="line">})(jQuery);</div></pre></td></tr></table></figure></code></pre>
<p>首先透過<code>each</code>遍歷所有頁籤（<code>#tabs li</code>），並在所有頁籤上綁定事件。

</p>
<p>當事件觸發時，移除其它頁籤的<code>class</code>，隱藏其他頁籤的內容，並將<code>class</code>新增至所選頁籤，顯示所選頁籤的內容。

</p>
<p>建議把JS放在頁尾（footer），可使頁面載入完成後才載入 JS，避免出現錯誤。

</p>
<p><a href="http://zespia.tw/demo/jquery-tabs/basic/">範例</a>｜
<a href="http://zespia.tw/demo/jquery-tabs/basic/example.zip">下載</a>

</p>
<h2>進階</h2>
<p>只有單純的顯示隱藏似乎太無趣了？那就加點動畫吧！只要稍微變更基礎結構，就能讓頁籤看起來更加華麗！

</p>
<h3>HTML</h3>
<pre><code class="lang-html"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">ul</span> <span class="attribute">id</span>=<span class="value">"tabs"</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"enable"</span>></span>頁籤 1<span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">li</span>></span>頁籤 2<span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">li</span>></span>頁籤 3<span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">li</span>></span>頁籤 4<span class="tag">&lt;/<span class="title">li</span>></span></div><div class="line"><span class="tag">&lt;/<span class="title">ul</span>></span></div><div class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"container"</span>></span></div><div class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"contents"</span>></span></div><div class="line">        <span class="tag">&lt;<span class="title">div</span>></span>頁籤 1 的內容<span class="tag">&lt;/<span class="title">div</span>></span></div><div class="line">        <span class="tag">&lt;<span class="title">div</span>></span>頁籤 2 的內容<span class="tag">&lt;/<span class="title">div</span>></span></div><div class="line">        <span class="tag">&lt;<span class="title">div</span>></span>頁籤 3 的內容<span class="tag">&lt;/<span class="title">div</span>></span></div><div class="line">        <span class="tag">&lt;<span class="title">div</span>></span>頁籤 4 的內容<span class="tag">&lt;/<span class="title">div</span>></span></div><div class="line">    <span class="tag">&lt;/<span class="title">div</span>></span></div><div class="line"><span class="tag">&lt;/<span class="title">div</span>></span></div></pre></td></tr></table></figure></code></pre>
<p>進階篇的 HTML 結構與基礎篇只有一點小差別，僅在原本的<code>#contents</code>的區塊外又包了一層<code>#container</code>。

</p>
<h3>CSS</h3>
<pre><code class="lang-css"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div><div class="line-number">15</div><div class="line-number">16</div><div class="line-number">17</div><div class="line-number">18</div><div class="line-number">19</div><div class="line-number">20</div><div class="line-number">21</div><div class="line-number">22</div><div class="line-number">23</div><div class="line-number">24</div><div class="line-number">25</div><div class="line-number">26</div><div class="line-number">27</div><div class="line-number">28</div><div class="line-number">29</div><div class="line-number">30</div><div class="line-number">31</div><div class="line-number">32</div><div class="line-number">33</div><div class="line-number">34</div><div class="line-number">35</div><div class="line-number">36</div><div class="line-number">37</div><div class="line-number">38</div><div class="line-number">39</div><div class="line-number">40</div><div class="line-number">41</div></pre></td><td class="code"><pre><div class="line"><span class="id">#tabs</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">1</span></span>;</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="id">#tabs</span> <span class="tag">li</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#ddd</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1</span>px solid <span class="hexcolor">#ccc</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">border-bottom</span>:<span class="value"> none</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">display</span>:<span class="value"> inline-block</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">margin-right</span>:<span class="value"> <span class="number">5</span>px</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">5</span>px <span class="number">10</span>px</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#999</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">cursor</span>:<span class="value"> pointer</span>;</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="id">#tabs</span> <span class="tag">li</span><span class="pseudo">:hover</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#666</span></span>;</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="id">#tabs</span> <span class="tag">li</span><span class="class">.enable</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">border-bottom</span>:<span class="value"> <span class="number">1</span>px solid <span class="hexcolor">#ddd</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">margin-bottom</span>:<span class="value"> -<span class="number">1</span>px</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#333</span></span>;</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="id">#container</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#ddd</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1</span>px solid <span class="hexcolor">#ccc</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> <span class="number">0</span> <span class="number">0</span> <span class="number">16</span>px <span class="hexcolor">#ccc</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">500</span>px</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span>;</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="id">#contents</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">0</span></span>;</span></div><div class="line">    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">2000</span>px</span>;</span> <span class="comment">/* 內容寬度 * 頁籤數 */</span></div><div class="line"><span class="rule">}</span></span></div><div class="line"><span class="id">#contents</span> > <span class="tag">div</span><span class="rules">{</div><div class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">10</span>px <span class="number">15</span>px</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">text-align</span>:<span class="value"> justify</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span>;</span></div><div class="line">    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">470</span>px</span>;</span> <span class="comment">/* 內容寬度 - 左右padding */</span></div><div class="line"><span class="rule">}</span></span></div></pre></td></tr></table></figure></code></pre>
<p><code>#contents</code>改為<code>absolute</code>（絕對定位），並設定寬度為「內容寬度 × 頁籤數量」。<code>#contents</code>內的<code>div</code>別忘了加上<code>float: left;</code>，如此一來頁籤內容才會排成一橫列，將寬度設為「內容寬度 － 左右 padding」。

</p>
<p>進階篇若少了 JS 的輔助，則無法正常顯示，除非事先設定<code>#container</code>的高度。

</p>
<h3>JS</h3>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div><div class="line-number">15</div><div class="line-number">16</div><div class="line-number">17</div><div class="line-number">18</div><div class="line-number">19</div><div class="line-number">20</div><div class="line-number">21</div><div class="line-number">22</div><div class="line-number">23</div><div class="line-number">24</div><div class="line-number">25</div><div class="line-number">26</div><div class="line-number">27</div><div class="line-number">28</div></pre></td><td class="code"><pre><div class="line">(<span class="keyword">function</span>($){</div><div class="line">    <span class="keyword">var</span> trigger = <span class="literal">false</span>;</div><div class="line">    <span class="comment">// 使內容高度等於第一頁籤內容高度 + 上下padding</span></div><div class="line">    $(<span class="string">'#container'</span>).css(<span class="string">'height'</span>, $(<span class="string">'#contents div'</span>).eq(<span class="number">0</span>).height() + <span class="number">20</span>);</div><div class="line">    <span class="comment">// 用each遍歷頁籤</span></div><div class="line">    <span class="keyword">var</span> tabs = $(<span class="string">'#tabs li'</span>).each(<span class="keyword">function</span>(i){</div><div class="line">        <span class="keyword">var</span> _i = i;</div><div class="line">        <span class="comment">// 為每個頁籤新增tabid屬性</span></div><div class="line">        <span class="comment">// 綁定click事件到頁籤上，若要改為滑鼠移入切換頁籤的話，將click改為mouseenter</span></div><div class="line">        $(<span class="keyword">this</span>).attr(<span class="string">'tabid'</span>, i).click(<span class="keyword">function</span>(){</div><div class="line">            <span class="comment">// 當trigger為false時才作用，避免重複點按造成瀏覽器crash</span></div><div class="line">            <span class="keyword">if</span> (trigger == <span class="literal">false</span>){</div><div class="line">                <span class="comment">// 取得目前的tabid，以計算動畫的間距值（內容寬度 * 頁籤間距）</span></div><div class="line">                <span class="keyword">var</span> now = parseInt($(<span class="keyword">this</span>).parent().children(<span class="string">'.enable'</span>).attr(<span class="string">'tabid'</span>)),</div><div class="line">                    gap = <span class="number">500</span> * (_i - now);</div><div class="line">                    trigger = <span class="literal">true</span>;</div><div class="line">                <span class="comment">// 移除其他頁籤的class，並將class新增至目前頁籤</span></div><div class="line">                $(<span class="keyword">this</span>).parent().children().removeClass(<span class="string">'enable'</span>).eq(_i).addClass(<span class="string">'enable'</span>);</div><div class="line">                <span class="comment">// 使內容移動一定間距</span></div><div class="line">                $(<span class="string">'#contents'</span>).animate({left: <span class="string">'-='</span>+gap}, <span class="number">500</span>);</div><div class="line">                <span class="comment">// 使內容高度符合所選頁籤內容的高度（所選頁籤內容高度 + 上下padding），動畫全部結束後，使trigger值返回false</span></div><div class="line">                $(<span class="string">'#container'</span>).animate({height: $(<span class="string">'#contents'</span>).children().eq(_i).height() + <span class="number">20</span>}, <span class="number">500</span>, <span class="keyword">function</span>(){</div><div class="line">                    trigger = <span class="literal">false</span>;</div><div class="line">                });</div><div class="line">            }</div><div class="line">        });</div><div class="line">    });</div><div class="line">})(jQuery);</div></pre></td></tr></table></figure></code></pre>
<p>原理與基礎篇有些差別，必須在頁籤上新增<code>tabid</code>屬性，不過透過 JS 代勞即可。

</p>
<p>首先使<code>#container</code>的高度符合第一頁籤的高度，接著同樣遍歷所有頁籤（<code>#tabs li</code>），在所有頁籤上新增<code>tabid</code>屬性，順便綁定事件。

</p>
<p>當事件觸發時，確認使用者是否正在操作頁籤（<code>trigger == false</code>），若頁籤操作速度過於頻繁，可能會使得動畫錯亂。接著計算動畫間距，使內容依照間距左右移動，並使其高度符合所選頁籤內容的高度。

</p>
<p>當動畫全部結束後，返回<code>trigger = false</code>，讓使用者能夠再度操作頁籤。

</p>
<p>如此一來，平凡樸素的頁籤便多了左右滑動的動畫，如果想要更加華麗的話，可以使用<a href="http://gsgd.co.uk/sandbox/jquery/easing/">jQuery Easing Plugin</a>。

</p>
<p><a href="http://zespia.tw/demo/jquery-tabs/advanced/">範例</a>｜
<a href="http://zespia.tw/demo/jquery-tabs/advanced/example.zip">下載</a>

</p>
<h2>後記</h2>
<p><img src="http://i.minus.com/ibiEDX70iCDveF.PNG" alt="">

</p>
<p>最後的成果如上圖，當然細部的樣式、動畫請自行設定。希望這篇文章簡單易懂（？）的文章能夠幫助到你。最近預計再寫一篇 CSS Only 的多級選單教學，請拭目以待吧！</p>]]></content>
    <category scheme="http://zespia.tw/tags%2FJavaScript" term="JavaScript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Hello Octopress!]]></title>
    <link href="http://zespia.tw/blog/2012/01/14/hello-octopress/"/>
    <id>http://zespia.tw/blog/2012/01/14/hello-octopress/</id>
    <published>2012-01-14T07:52:00.000Z</published>
    <updated>2012-09-22T01:20:35.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/i4CFI4qZAFEct.png" alt="">

</p>
<p><a href="http://www.acsite.net/tw/">ACSite</a> 的空間即將在2012/1/31到期，而我又懶得續約，這時看到愈來愈多部落客都從 <a href="http://wordpress.org/">WordPress</a> 轉移到 <a href="http://octopress.org/">Octopress</a>，便開始試用 <a href="http://octopress.org/">Octopress</a>。

</p>
<p><a href="http://octopress.org/">Octopress</a> 與 <a href="http://wordpress.org/">WordPress</a> 同樣身為部落格系統，卻有相當大的不同：

</p>
<ul>
<li><strong><a href="http://wordpress.org/">WordPress</a>：</strong><ul>
<li>PHP</li>
<li>動態網頁</li>
<li>外掛多樣</li>
<li>速度慢</li>
<li>使用簡單</li>
</ul>
</li>
<li><strong><a href="http://octopress.org/">Octopress</a>：</strong><ul>
<li>Ruby</li>
<li>靜態網頁</li>
<li>剛起步，外掛還很少</li>
<li>速度快</li>
<li>geek 才會用</li>
</ul>
</li>
</ul>
<p>以下將簡單介紹 <a href="http://octopress.org/">Octopress</a> 的安裝與使用。

</p>
<span id="more"></span>

<h2>安裝</h2>
<h3>Ruby</h3>
<p><a href="http://octopress.org/">Octopress</a> 的安裝非常簡單，首先你需要準備 <a href="http://www.ruby-lang.org/zh_TW/">Ruby</a> 的環境，以下以 Mac 為示範：

</p>
<p><strong>請務必照著步驟做。</strong>

</p>
<p>1.安裝 <a href="http://itunes.apple.com/us/app/xcode/id448457090?mt=12">Xcode</a>（建議使用<strong>4.1</strong>版），或直接安裝 <a href="https://github.com/kennethreitz/osx-gcc-installer">OSX GCC Installer</a>。

</p>
<p>2.安裝 <a href="http://mxcl.github.com/homebrew/">Homebrew</a>

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>ruby -e <span class="string">"$(curl -fsSL https://raw.github.com/gist/323731)"</span></div><div class="line"><span class="variable">$ </span>brew update</div></pre></td></tr></table></figure></code></pre>
<p>3.安裝 <a href="http://git-scm.com/">Git</a>

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>brew install git</div></pre></td></tr></table></figure></code></pre>
<p>別忘了Mac上有 <a href="http://www.sourcetreeapp.com/">SourceTree</a> 和 <a href="http://gitx.laullon.com/">GitX</a> 這兩套不錯的Git GUI可以使用！

</p>
<p>4.安裝 <a href="http://beginrescueend.com/">RVM</a>

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div></pre></td><td class="code"><pre><div class="line"><span class="char">$ </span>bash &lt; &lt;(curl -s <span class="method">https:</span>//rvm.beginrescueend.com/install/rvm)</div><div class="line"><span class="char">$ </span>echo <span class="comment">"[[ -s $HOME/.rvm/scripts/rvm ]] &amp;&amp; source $HOME/.rvm/scripts/rvm"</span> >> ~/.profile <span class="char">$ </span>. ~/.profile</div><div class="line"><span class="char">$ </span>source ~/.profile</div></pre></td></tr></table></figure></code></pre>
<p>5.安裝 <a href="http://www.ruby-lang.org/zh_TW/">Ruby</a>（<a href="http://octopress.org/">Octopress</a> 要求使用<strong>1.9.2</strong>版）

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>rvm install <span class="number">1.9</span>.<span class="number">2</span></div><div class="line"><span class="variable">$ </span>rvm <span class="number">1.9</span>.<span class="number">2</span> --default</div></pre></td></tr></table></figure></code></pre>
<p>若是安裝失敗的話，請試著使用以下方式安裝：

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div></pre></td><td class="code"><pre><div class="line"><span class="char">$ </span>rvm remove <span class="number">1.9</span><span class="number">.2</span></div><div class="line"><span class="char">$ </span>export <span class="class">CC</span>=/usr/bin/gcc-<span class="number">4.2</span></div><div class="line"><span class="char">$ </span>brew install readline</div><div class="line"><span class="char">$ </span>brew link readline</div><div class="line"><span class="char">$ </span>rvm install <span class="number">1.9</span><span class="number">.2</span> --with-readline-dir=<span class="char">$r</span>vm_path/usr</div></pre></td></tr></table></figure></code></pre>
<p>6.安裝 <a href="http://pow.cx/">Pow</a>

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">$ curl get<span class="variable">.pow</span><span class="variable">.cx</span> | sh</div></pre></td></tr></table></figure></code></pre>
<p><em>（以上安裝步驟參考自<a href="http://killtw.k2ds.net/blog/2011/10/29/how-to-install-rails/">我這樣安裝Rails - 佑樣の技術筆記</a>）</em>

</p>
<h3>Octopress</h3>
<p>到目前為止，只不過安裝好 <a href="http://www.ruby-lang.org/zh_TW/">Ruby</a> 罷了，接著才是重頭戲──<a href="http://octopress.org/">Octopress</a> 登場！

</p>
<p>1.安裝 <a href="https://github.com/sstephenson/rbenv">rbenv</a>

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>brew install rbenv</div><div class="line"><span class="variable">$ </span>brew install ruby-build</div></pre></td></tr></table></figure></code></pre>
<p>2.下載 <a href="http://octopress.org/">Octopress</a>

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div></pre></td><td class="code"><pre><div class="line"><span class="char">$ </span>git clone <span class="method">git:</span>//github.com/imathis/octopress.git octopress</div><div class="line"><span class="char">$ </span>cd octopress</div></pre></td></tr></table></figure></code></pre>
<p>3.安裝相關套件

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>gem install bundler</div><div class="line"><span class="variable">$ </span>bundle install</div></pre></td></tr></table></figure></code></pre>
<p>4.安裝預設佈景主題

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>rake install</div></pre></td></tr></table></figure></code></pre>
<p>如此一來就安裝好 <a href="http://octopress.org/">Octopress</a> 了，你可以輸入<code>rake preview</code>從<code>localhost:4000</code>預覽，或是透過 <a href="http://pow.cx/">Pow</a> 預覽：

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div></pre></td><td class="code"><pre><div class="line"><span class="char">$ </span>cd ~/.pow</div><div class="line"><span class="char">$ </span>ln -s /path-to-octopress</div></pre></td></tr></table></figure></code></pre>
<h2>發佈</h2>
<p>1.在 <a href="https://github.com/">GitHub</a> 建立名為<code>http://yourname.github.com</code>的 repository，<code>yourname</code>必須與你的使用者名稱相同，否則會建立專案頁面。

</p>
<p>2.設定 <a href="https://github.com/">GitHub</a> 資料，並依照指示輸入 GitHub 頁面的 repository 網址。

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>rake setup_github_pages</div></pre></td></tr></table></figure></code></pre>
<p>3.建立網誌資料

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>rake generate</div></pre></td></tr></table></figure></code></pre>
<p>4.發佈至 <a href="https://github.com/">GitHub</a>

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>rake deploy</div></pre></td></tr></table></figure></code></pre>
<p>5.建立 commit

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>git add .</div><div class="line"><span class="variable">$ </span>git commit -m <span class="string">'your message'</span></div><div class="line"><span class="variable">$ </span>git push origin source</div></pre></td></tr></table></figure></code></pre>
<p>過幾分鐘後 <a href="https://github.com/">GitHub</a> 就會寄信通知你專業建立完成，連上<code>yourname.github.com</code>就能見到你的 <a href="http://octopress.org/">Octopress</a> 囉！

</p>
<p>若要進一步設定，請編輯 <a href="http://octopress.org/">Octopress</a> 根目錄中的<code>_config.yml</code>。

</p>
<h3>自定網域</h3>
<p>在<code>source/CNAME</code>輸入網域名稱

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="keyword">echo</span> <span class="string">'your-domain.com'</span> >> source/CNAME</div></pre></td></tr></table></figure></code></pre>
<p>若網域名稱如<code>www.example.com</code>，只需要新增 CNAME 記錄<code>yourname.github.com</code>即可；若如<code>example.com</code>，則必須加入 A 記錄<code>207.97.227.245</code>，請勿使用 CNAME 記錄。

</p>
<p><em>（以上安裝步驟參考自 <a href="http://octopress.org/docs/">Octopress Documentation</a>）</em>

</p>
<h2>寫作</h2>
<p>雖然安裝看起來很麻煩，不過寫作文章相當簡單！

</p>
<h3>文章</h3>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>rake new_post[<span class="string">'title'</span>]</div></pre></td></tr></table></figure></code></pre>
<p>輸入以上代碼後，就可在<code>source/_posts</code>見到<code>yyyy-mm-dd-title.markdown</code>格式的文件，以及以下內容：

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">---</span></div><div class="line"><span class="title">layout</span>: post</div><div class="line"><span class="title">title</span>: <span class="string">"Post Title"</span></div><div class="line"><span class="title">date</span>: <span class="number">2012</span>-<span class="number">01</span>-<span class="number">14</span> <span class="number">15</span>:<span class="number">52</span></div><div class="line"><span class="title">comments</span>: true</div><div class="line"><span class="title">categories</span>:</div><div class="line"><span class="comment">---</span></div></pre></td></tr></table></figure></code></pre>
<p>你可透過以下幾種方式來編輯分類：

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div></pre></td><td class="code"><pre><div class="line"><span class="header"># 單一分類</span></div><div class="line">categories: Sass</div><div class="line"><span class="header"># 多重分類 (1)</span></div><div class="line">categories: [CSS3, Sass, Media Queries]</div><div class="line"><span class="header"># 多重分類 (2)</span></div><div class="line">categories:</div><div class="line"><span class="bullet">- </span>CSS3</div><div class="line"><span class="bullet">- </span>Sass</div><div class="line"><span class="bullet">- </span>Media Queries</div></pre></td></tr></table></figure></code></pre>
<p><a href="http://octopress.org/">Octopress</a> 完整支援 <a href="http://markdown.tw/">Markdown</a> 語法，另外可利用<code>&lt;!-- more --&gt;</code>達成「詳閱全文」的效果。

</p>
<h3>分頁</h3>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 一般分頁    </span></div><div class="line"><span class="variable">$ </span>rake new_page[your-page]</div><div class="line"><span class="comment"># 子分頁</span></div><div class="line"><span class="variable">$ </span>rake new_page[your-page/sub-page.html]</div></pre></td></tr></table></figure></code></pre>
<p>輸入以上代碼後，就可在<code>source/your-page</code>中見到<code>index.markdown</code>，以及以下內容：

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line"><span class="method">layout:</span> page</div><div class="line"><span class="method">title:</span> <span class="comment">"Page Title"</span></div><div class="line"><span class="method">date:</span> <span class="number">2012</span>-<span class="number">01</span>-<span class="number">14</span> <span class="number">15</span>:<span class="number">52</span></div><div class="line"><span class="method">comments:</span> <span class="keyword">true</span></div><div class="line"><span class="method">sharing:</span> <span class="keyword">true</span></div><div class="line"><span class="method">footer:</span> <span class="keyword">true</span>    </div><div class="line">---</div></pre></td></tr></table></figure></code></pre>
<p>操作方法與文章大同小異，同樣完整支援 <a href="http://markdown.tw/">Markdown</a> 語法。

</p>
<h3>建立</h3>
<p>輸入<code>rake generate</code>即可建立文章或分頁，輸入<code>rake deploy</code>就會將文章 pull 到<a href="https://github.com/">GitHub</a>上。

</p>
<h2>結論</h2>
<p>經過這幾天的試用結果，老實說 <a href="http://octopress.org/">Octopress</a> 實在有夠難用，沒有如 <a href="http://wordpress.org/">WordPress</a> 的強大管理介面，所有操作<em>（包括新增文章、分頁）</em>都必須透過終端；然而撰寫文章比 <a href="http://wordpress.org/">WordPress</a> 快多了，不需忍耐 <a href="http://wordpress.org/">WordPress</a> 慢吞吞的編輯器，在 local 用 <a href="http://markdown.tw/">Markdown</a> 寫完就能直接 deploy 到 <a href="https://github.com/">GitHub</a> 上。

</p>
<p>如果你是個 geek，<a href="http://octopress.org/">Octopress</a> 或許是不錯的選擇；如果不是的話，請繼續使用 <a href="http://wordpress.org/">WordPress</a> 吧！

</p>]]></content>
    <category scheme="http://zespia.tw/tags%2FOctopress" term="Octopress"/>
    <category scheme="http://zespia.tw/tags%2FRuby" term="Ruby"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Google+ Motionless & Filter]]></title>
    <link href="http://zespia.tw/blog/2011/09/17/google-scripts-2/"/>
    <id>http://zespia.tw/blog/2011/09/17/google-scripts-2/</id>
    <published>2011-09-17T00:00:00.000Z</published>
    <updated>2012-10-10T16:39:03.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/ieJceSDuuo3RS.png" alt="サイノウサンプラー | ryosios（id=21795820）">


</p>
<p>最近課業繁重，無法抽出時間撰寫網誌，於是 <del>寫這篇文章來騙人氣</del> 再介紹一次之前寫的 2 個 Google+ 腳本。上圖與本文毫無關係，純粹是在 Pixiv 上隨便抓一張圖片而已。

</p>
<h2>Google+ Motionless</h2>
<p>看圖、影片或閱讀文章時，因為訊息串的快速更新，常會使畫面不斷上下抽動，不只妨礙視覺，有時還會誤按連結，因此當做練功寫了這個腳本，並於 1.0.4 版新增「自動載入下頁」功能。

</p>
<p><a href="http://userscripts.org/scripts/show/111484">下載（Ver. 1.0.4）</a>

</p>
<h2>Google+ Fxxking Filter</h2>
<p>「樹大必有枯枝，人多必有白痴」，有時在訊息串上會看到令人很不爽的發言，透過這腳本可以將不想看到的訊息過濾，還給使用者一片乾淨的訊息串。

</p>
<p><a href="http://userscripts.org/scripts/show/111206">下載（Ver. 1.0.1）</a></p>]]></content>
    <category scheme="http://zespia.tw/tags%2FJavaScript" term="JavaScript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[HTML5 Storage 的使用彙整]]></title>
    <link href="http://zespia.tw/blog/2011/08/04/html5-storage/"/>
    <id>http://zespia.tw/blog/2011/08/04/html5-storage/</id>
    <published>2011-08-04T10:01:00.000Z</published>
    <updated>2012-10-10T16:36:49.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/ich1TucSOe08P.jpg" alt="找不到相關的圖，各位就把小惡魔胸前的脂肪塊當做Storage吧！（id=21000433）">

</p>
<p>當初寫 Google+ Hover Zoom 這腳本時，壓根沒想過可以用 Greasemonkey 內建的參數來儲存資料，於是就選用 HTML5 的 Storage 功能來儲存資料，然而此功能僅能儲存字串（String），讓我花了好些時間上網找資料才能掌握此功能的使用方式。

</p>
<span id="more"></span>

<p>Storage 的功能基本上與 cookie 大致相同，然而儲存空間比 cookie 大多了，cookie 僅有 4KB 的空間，Storage卻有5MB的空間，讓開發者能夠好好善用。此功能的使用方式非常簡單，分為：Local Storage 與 Session Storage，顧名思義，兩者都是將資料儲存於用戶端的功能，然而前者能儲存的時間較長，直到使用者清除快取前都不會被刪除，而後者在使用者關閉分頁後資料就會被刪除；兩者的使用方式完全相同，以下皆以 Local Storage 作為示範。

</p>
<p>下文皆使用 jQuery 1.7.1。<del>（因為我只會 jQuery）</del>

</p>
<h2>基礎</h2>
<h3>設定資料</h3>
<p>以下三種方式擇一即可，下文亦同。

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div></pre></td><td class="code"><pre><div class="line">localStorage[<span class="string">'test'</span>] = testValue;</div><div class="line">localStorage.setItem(<span class="string">'test'</span>, testValue);</div><div class="line">localStorage.test = testValue;</div></pre></td></tr></table></figure></code></pre>
<h3>取得資料</h3>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div></pre></td><td class="code"><pre><div class="line">localStorage[<span class="string">'test'</span>];</div><div class="line">localStorage.getItem(<span class="string">'test'</span>);</div><div class="line">localStorage.test;</div></pre></td></tr></table></figure></code></pre>
<h3>刪除資料</h3>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">localStorage.removeItem(<span class="string">'test'</span>);</div></pre></td></tr></table></figure></code></pre>
<h3>資料全部清除</h3>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">localStorage.clear();</div></pre></td></tr></table></figure></code></pre>
<h2>勾選框（checkbox）</h2>
<h3>設定資料</h3>
<p>由於 Storage 僅支援字串，必須使用<code>toString()</code>函數，將 Boolean 值轉為字串才可儲存。

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div></pre></td><td class="code"><pre><div class="line">localStorage[<span class="string">'test'</span>] = $(<span class="string">'#test'</span>).prop(<span class="string">'checked'</span>).toString();</div><div class="line"><span class="comment">// 若jQuery版本低於1.6</span></div><div class="line">localStorage[<span class="string">'test'</span>] = $(<span class="string">'#test'</span>).attr(<span class="string">'checked'</span>).toString();</div></pre></td></tr></table></figure></code></pre>
<h3>取得資料</h3>
<p>使用<code>===</code>判斷資料。

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ( localStorage[<span class="string">'test'</span>] === <span class="string">'true'</span> ) {</div><div class="line">    <span class="comment">// Do something</span></div><div class="line">}</div></pre></td></tr></table></figure></code></pre>
<h2>下拉式選單（select）</h2>
<h3>設定資料</h3>
<p>取得選單中<code>:selected</code>的值，並儲存即可。

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">localStorage[<span class="string">'test'</span>] = $(<span class="string">'#test'</span>).find(<span class="string">':selected'</span>).val();</div></pre></td></tr></table></figure></code></pre>
<h2>陣列（array）</h2>
<h3>設定資料</h3>
<p>陣列大概是讓我最頭痛的部份，同前文所述，Storage 僅支援字串，所以必須先以特殊的分隔符號來隔開每個元素。<em>（如|, $, ;等符號，隨你喜歡）</em>

</p>
<p>如果你在下面的陣列中看到德文，那只是我突然中二病發作而已，<del>如果你看得懂的話代表你也是個廚二</del>。

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 一維陣列</span></div><div class="line"><span class="keyword">var</span> storage = [<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>, <span class="string">'four'</span>];</div><div class="line">localStorage[<span class="string">'test'</span>] = storage.join(<span class="string">'|||'</span>);</div><div class="line"><span class="comment">// 二維陣列（多維陣列亦同）</span></div><div class="line"><span class="keyword">var</span> storage = {[<span class="string">'one'</span>, <span class="string">'eins'</span>], [<span class="string">'two'</span>, <span class="string">'zwei'</span>], [<span class="string">'three'</span>, <span class="string">'drew'</span>], [<span class="string">'four'</span>, <span class="string">'vier'</span>]};</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;storage.length; i++){</div><div class="line">    storage[i] = storage[i].join(<span class="string">';'</span>);</div><div class="line">}</div><div class="line">localStorage[<span class="string">'test'</span>] = storage.join(<span class="string">'|||'</span>);</div></pre></td></tr></table></figure></code></pre>
<h3>取得資料</h3>
<p>利用<code>split</code>函數分割字串。

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 一維陣列</span></div><div class="line"><span class="keyword">var</span> storage = localStorage[<span class="string">'test'</span>].split(<span class="string">'|||'</span>);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;storage.length; i++){</div><div class="line">    <span class="comment">// do something</span></div><div class="line">}</div><div class="line"><span class="comment">// 二維陣列（多維陣列亦同）</span></div><div class="line"><span class="keyword">var</span> storage = localStorage[<span class="string">'test'</span>].split(<span class="string">'|||'</span>);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;storage.length; i++){</div><div class="line">    <span class="keyword">var</span> item = storage[i].split(<span class="string">';'</span>);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;item.length; j++){</div><div class="line">        <span class="comment">// do something</span></div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure></code></pre>
<h2>後記</h2>
<p>最近因為課業繁忙，網誌都放著生灰超過一個月了，於是心血來潮將最近寫腳本的心得寫成文章，可能會有錯誤，請多見諒。</p>]]></content>
    <category scheme="http://zespia.tw/tags%2FHTML5" term="HTML5"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Google+ Hide Comments & Hover Zoom]]></title>
    <link href="http://zespia.tw/blog/2011/07/13/firefox-google-plus-plugins/"/>
    <id>http://zespia.tw/blog/2011/07/13/firefox-google-plus-plugins/</id>
    <published>2011-07-13T00:00:00.000Z</published>
    <updated>2012-09-22T01:21:32.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/ihQ0s0iWJDgNU.jpeg" alt="">

</p>
<p>大約在兩週前，Google 發表了新的社群服務「Google+」，雖然很多人都說 Facebook 和 Google+ 有很大的不同，不過對我而言 Google+ 就是個宅宅版的 Facebook 罷了，我懶得去分析什麼社群網站的情勢了，今天的重點也不在這裡。

</p>
<p>雖然 Google+ 已經發表了一段時間，針對 Firefox 所做的擴充元件還是很少，幾乎沒有，反倒是Chrome的擴充套件數量不斷提昇，因此上週六（7/9）我吃飽太閒試著用 jQuery 寫了生平第一個瀏覽器腳本「Google+ Hide Comments」，一個行數不到 40 行的簡單腳本，本來想試著研究 Firefox 擴充套件，但最後太複雜還要先裝一堆擴充套件於是作罷。

</p>
<span id="more"></span>

<h2>Google+ Hide Comments</h2>
<p><img src="http://i.minus.com/ibezLR2xu8BKlc.jpg" alt="">

</p>
<p>此腳本的功能如上圖，啟用後會在每篇文章的留言後加入&quot;Toggle comments&quot;的連結，點擊&quot;Toggle comments&quot;連結可以展開、摺疊留言。

</p>
<p><blockquote>
已停止更新
</blockquote>

</p>
<h2>Google+ Hover Zoom</h2>
<p><img src="http://i.minus.com/i4Xjzr8VGpgHM.jpg" alt="">

</p>
<p>滑鼠移入即可顯示原圖，並能從側邊的下載按鈕直接下載原圖。很簡單的功能，不過他媽的正規表達式有夠難寫，根本天書。目前正規表達式與判斷式的問題應該都修正完畢，未來預計擴充設定頁面的功能並改善效能。

</p>
<p><a href="http://userscripts.org/scripts/show/106681">下載</a>

</p>
<p>我的網誌有種變成雙週刊的趨勢，每兩週才一篇新文章，明後天再發一篇 Steins;Gate 的文章吧。<a href="http://gplus.to/SkyArrow">我的 Google+</a>
</p>]]></content>
    <category scheme="http://zespia.tw/tags%2FJavaScript" term="JavaScript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[鍊金術士梅露露 ～亞蘭德的鍊金術士 3～]]></title>
    <link href="http://zespia.tw/blog/2011/07/01/ps3-meruru/"/>
    <id>http://zespia.tw/blog/2011/07/01/ps3-meruru/</id>
    <published>2011-07-01T07:44:00.000Z</published>
    <updated>2012-10-10T16:38:37.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/ib1v5x6fsVI7ue.jpeg" alt="相機又被老媽搶走了，反正我攝影技術也不好，乾脆直接貼官網的桌布吧（逃）">

</p>
<p>當初聽到這款遊戲的發售消息時，還有點猶豫自己到底該不該買，因為同一系列的托托莉我玩了將近一個月，還是摸不熟系統，最後只得來了「BAD END」的結局，但當我回神之時，手中的滑鼠已經不自覺地按下了「訂購」連結，於是乎就有你眼前的這篇文章了。

</p>
<span id="more"></span>

<div class="video-container"><object width="640" height="360"><param name="movie" value="http://www.youtube.com/v/gWYwPFxRxms?version=3&amp;hl=en_US"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/gWYwPFxRxms?version=3&amp;hl=en_US" type="application/x-shockwave-flash" width="640" height="360" allowscriptaccess="always" allowfullscreen="true"></embed></object></div>

<p>本作襲承托托莉的 True End 而來。亞蘭德共和國西北方的一處小國「阿路斯王國」，是個比亞蘭德還有更多發展空間的邊境國家。在 5 年後，阿路斯將與亞蘭德合併，於是亞蘭德派遣了煉金術士「托托莉」，協助發展這個國家成為大都市，淘氣調皮的公主「梅露露」對煉金術產生了興趣，因此決定成為托托莉的弟子，然而遭到了父王的反對。不過父王最後還是心軟，決定給梅露露 3 年的時間，使這個小國的人口從 100 人提升到 3 萬人，如果達成就會繼續讓梅露露研究煉金術。

</p>
<p><blockquote><br>我操，你這爸爸好歹也進行一下開發吧，人口只有 100 人連稱為「國家」都有點困難了啊！
</blockquote>

</p>
<p>這代的畫面相較於前兩代又進步了一些，光影的處理做得更棒了，<a href="http://www.nicovideo.jp/watch/sm14822011"><del>精美的3D模組也讓人感到讚嘆</del></a>；在介面上，提供了更貼心的服務，可以直接從「開拓」和「依賴」頁面連結到調和選單，特殊的道具也做了清楚的標示。此外，這一代女主角的聲音大概是我最喜歡的，沒有前兩代過嗲的感覺。

</p>
<h2>結局</h2>
<p>目前已解出了 6 種結局，獎盃進度 70％：

</p>
<p><img src="http://i.minus.com/ivI7nvYlsOlyi.jpg" alt="">

</p>
<p><img src="http://i.minus.com/iSRjJ9IQifZ8K.jpg" alt="">

</p>
<p><strong>城での生活</strong>（條件：無）<br>阿路斯與亞蘭德合併後，梅露露放棄了煉金術的研究，在家裡頹廢的不知道該做什麼，這或許是梅露露第一次在行動前思考吧？梅露露認為不能再這樣下去，決定為了「尋找目標」向未來邁進一步。<em>（這怎麼有點像BAD END的感覺？）</em>

</p>
<p><img src="http://i.minus.com/i8FMLMHMLGOPs.jpg" alt="">

</p>
<p><strong>てんやわんや</strong>（條件：人口突破 10 萬人）<br>阿路斯成為了亞蘭德國內數一數二的大都市，雖然梅露露每天工作都很忙碌，但感到相當開心。

</p>
<p><img src="http://i.minus.com/i7A67kAxPV3gF.jpg" alt="">

</p>
<p><strong>豊かな国</strong>（條件：打倒エアトシャッター）<br>梅露露利用煉金知識，使阿路斯成為了亞蘭德國內的第一大農業城市。

</p>
<p>エアトシャッター還挺好打的，然而真‧エアトシャッター的血比前者多了足足一倍，就算武器和防具升級到最高等級也打不贏，只好下一輪做出頂級飾品和藥品跟它拼了

</p>
<p><img src="http://i.minus.com/iKnMCNHKzO3Qa.jpg" alt="">

</p>
<p><img src="http://i.minus.com/ibj0ifogbNlhLE.jpg" alt="">

</p>
<p><strong>おとこぶろ</strong>（條件：建設健康ランド）<br>梅露露意外的在火山發現泉源，利用煉金知識，使阿路斯成為了亞蘭德國內的溫泉觀光景點。

</p>
<p>這結局可真麻煩，必須要有足夠的時間和インゴット才有辦法達到，光是收集就要花一個月，煉成就要花兩～三個月的時間，幸好中途的福利還挺不錯的，這就是所謂的 CERO A嗎～

</p>
<p><img src="http://i.minus.com/i4mm5lhI9WKtw.jpg" alt="">

</p>
<p><strong>人気者の今日</strong>（條件：每位角色的好感度大於 80）<br>與每位朋友的好感度大於 80。<del>梅露露成功建立後宮。</del>

</p>
<p>托托莉x咪咪太棒了！諸君，我愛百合！我愛百合！

</p>
<p><img src="http://i.minus.com/iWAUvu8Sv7RtD.jpg" alt="">

</p>
<p><strong>やっと計画通り</strong>（條件：作成「若返りの薬」且煉金等級小於 50）<br>雖然成功作成了返老還童藥，然而蘿樂娜卻因師匠的私心而停留在 14 歲，且 14 歲後的記憶完全消失。

</p>
<p>可惡的 GUST 啊！明明某個 40 歲歐巴桑看起來還這麼年輕，30歲的蘿樂娜又會差多少呢！（被雙刀砍死）

</p>
<h2>連結</h2>
<p>全 CG <a href="http://www.multiupload.com/DOXTY733OZ">下載</a>｜<a href="https://picasaweb.google.com/105931860008509594725/3?authuser=0&amp;feat=directlink">相簿</a><br><a href="http://meruru.lostgamer.net/">メルルのアトリエ ～アーランドの錬金術士3～ 攻略Wiki – Lostgamer</a></p>]]></content>
    <category scheme="http://zespia.tw/tags%2FPS3" term="PS3"/>
    <category scheme="http://zespia.tw/tags%2F%E9%81%8A%E6%88%B2" term="遊戲"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Corner 1.0 正式版推出！]]></title>
    <link href="http://zespia.tw/blog/2011/05/27/corner-theme/"/>
    <id>http://zespia.tw/blog/2011/05/27/corner-theme/</id>
    <published>2011-05-27T00:00:00.000Z</published>
    <updated>2012-09-22T01:23:10.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/igeV3vBq0HbXR.jpg" alt="">

</p>
<p>日前在法雅客時，碰巧看到了展示中的 Windows Phone 7，雖然我個人不是很喜歡微軟，不過 WP7 看來真的擺脫了前代的束縛，順暢又簡潔的介面不輸 iPhone。於是我便想依照 WP7 的風格來設計一個佈景主題，起初還摸不著頭緒，直到開學之後才突然靈感迸發，果然人類都必須直到開學後才會開始努力嗎...orz。

</p>
<p>這次相較於 Pixiv Custom，大幅簡化了部分語法，本來也想試著嘗試簡化後者的語法，不過之前我做得太混亂了，連我都有點看不懂XD，於是便放棄了。

</p>
<p>此佈景支援 WordPress 3.0 功能，「<strong>自定選單</strong>」以及「<strong>自定背景</strong>」，可支援 Banner 聯播，只需將「<strong>700x200px</strong>」的圖片放入<code>/headers</code>資料夾內，頁面重新整理時便會隨機顯示圖片。1.0 正式版已<strong>新增</strong>以下功能：

</p>
<ul>
<li>AJAX 頁面導覽</li>
<li>分享按鈕</li>
<li>留言功能按鈕提示</li>
<li>重新改版佈景設定頁面</li>
</ul>
<span id="more"></span>

<h2>瀏覽器支援</h2>
<p>完整支援 Mozilla Firefox,  Google Chrome, Safari, Opera, Internet Explorer 8，但 Internet Explorer 7&amp;6 有部分留言列表問題。

</p>
<h2>下載</h2>
<p><a href="http://wordpress.org/extend/themes/download/corner.1.0.9.zip">正式版 (Ver. 1.0.9)</a><br><a href="http://wp-themes.com/corner">預覽</a>

</p>
<h2>更新記錄</h2>
<ul>
<li>1.0.9<ul>
<li><strong>修改</strong> - 修復圖片與文字中沒有留白的問題</li>
<li><strong>修改</strong> - 將<code>$content_width</code>更改為660</li>
<li><strong>修改</strong> - 修復後台重設按鈕的問題</li>
<li><strong>移除</strong> - 分頁中「留言已停用」的提示</li>
</ul>
</li>
<li>1.0.8<ul>
<li><strong>修改</strong> – 使用Settings API完成較安全的後台頁面</li>
</ul>
</li>
<li>1.0.7<ul>
<li><strong>修改</strong> – 修復文章浮動（float）問題</li>
<li><strong>修改</strong> – 變更背景圖片以符合較大的螢幕解析度</li>
<li><strong>移除</strong> – 因為WordPress 3.0內建<code>automatic_feed_links()</code>函數，故<strong>移除</strong><code>&lt;head&gt;</code>標籤內的RSS連結</head></li>
</ul>
</li>
<li>1.0.6<ul>
<li><strong>新增</strong> - 定義置頂文章的樣式</li>
<li><strong>新增</strong> - 在404頁面中<strong>新增</strong>搜尋欄與標籤雲供訪客使用</li>
<li><strong>新增</strong> - 後台頁面使用cookie記憶上一次開啟的分頁（時效一天）</li>
<li><strong>新增</strong> - 「繼續閱讀」連結</li>
<li><strong>修改</strong> - 搜尋欄改採<code>search_form()</code>函數</li>
<li><strong>修改</strong> - 更改字元編碼宣告</li>
<li><strong>修改</strong> - 後台頁面改採<code>checked()</code>與<code>selected()</code>函數簡化代碼</li>
</ul>
</li>
<li>1.0.5<ul>
<li><strong>修改</strong> - 重新設計搜尋欄的動畫</li>
<li><strong>修改</strong> - 棄用不安全的AJAX頁面導覽方式，改為呼叫函數的方式，缺點是修改後僅能使用於首頁</li>
<li><strong>修改</strong> - 修復後台頁面<code>Undefined Index</code>的問題</li>
<li><strong>修改</strong> - 新增<code>search-failed.php</code>，為搜尋失敗的訪客提供更詳細的說明</li>
<li><strong>修改</strong> - 簡化並加強<code>comment.js</code></li>
</ul>
</li>
<li>1.0.4<ul>
<li><strong>修改</strong> - 某些伺服器會有<code>Cannot modify header information</code>的PHP問題，將<code>function.php</code>中的函數修改後排除</li>
</ul>
</li>
<li>1.0.2<ul>
<li><strong>新增</strong> - 首頁的其他布局（概要與縮圖、僅標題）</li>
<li><strong>新增</strong> - 在首頁及彙整頁面中顯示日期</li>
<li><strong>新增</strong> - 標記留言為「管理員」或「審核中」</li>
<li><strong>新增</strong> - TinyMCE 編輯器的自定樣式表</li>
<li><strong>新增</strong> - WordPress 預設的自定頁首圖片</li>
<li><strong>修改</strong> - 置頂文章的樣式</li>
<li><strong>修改</strong> - 修復無法列印字元</li>
<li><strong>修改</strong> - 部分管理頁面的翻譯</li>
<li><strong>修改</strong> - 使用<code>get_template_part()</code>函數縮減代碼</li>
<li><strong>修改</strong> - 重新設計搜尋欄的動畫</li>
</ul>
</li>
<li>1.0.1<ul>
<li><strong>新增</strong> - 可調整標題大小</li>
<li><strong>新增</strong> - 副標題顯示</li>
<li><strong>修改</strong> - 將選單深度增至無限</li>
</ul>
</li>
<li>1.0<ul>
<li><strong>新增</strong> - AJAX頁面導覽</li>
<li><strong>新增</strong> - 留言功能按鈕提示</li>
<li><strong>新增</strong> - 文章分享按鈕</li>
<li><strong>新增</strong> - 回覆留言前增加「@使用者名稱」連結</li>
<li><strong>修改</strong> - 佈景設定頁面</li>
<li><strong>修改</strong> - 簡化CSS與Javascript代碼</li>
</ul>
</li>
</ul>]]></content>
    <category scheme="http://zespia.tw/tags%2FWordPress" term="WordPress"/>
    <category scheme="http://zespia.tw/tags%2F%E4%B8%BB%E9%A1%8C" term="主題"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[如何使用 Settings API 製作佈景後台選項？]]></title>
    <link href="http://zespia.tw/blog/2011/05/22/how-to-use-settings-api/"/>
    <id>http://zespia.tw/blog/2011/05/22/how-to-use-settings-api/</id>
    <published>2011-05-22T08:02:00.000Z</published>
    <updated>2012-10-10T16:39:01.000Z</updated>
    <content type="html"><![CDATA[<p>隨著 WordPress 版本號的推進，不只系統越變越肥大，外掛、佈景主題的條件也越來越嚴苛，全部規定必須使用官方的現有函數製作，雖然 WordPress 的函數庫真的很豐富很好用，不過這麼獨裁的規定著實讓人很不爽。

</p>
<p>因此，由於官方要求，我必須使用 Settings API 來製作主題選項，但官方文件的資料的資訊實在太少了，在下沒慧根實在看不懂，經過 Google 百般尋覓後，將我較喜歡的幾篇文章（見參考出處）整合寫成了這篇文章，我沒有 PHP 底子，只有在圖書館翻過幾本書，內文可能會有些錯誤，請見諒。

</p>
<span id="more"></span>

<h2>基礎架構</h2>
<p>首先，建立一個空白的<code>php</code>檔案，以下以<code>function-admin.php</code>為例，實際情況依個人設定而有差異。然後，在<code>function.php</code>寫入下列程式碼，以引入<code>function-admin.php</code>這個外部檔案。

</p>
<pre><code class="lang-php"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ( file_exists( TEMPLATEPATH.<span class="string">'/function-admin.php'</span> ) ) {</div><div class="line">    <span class="keyword">require_once</span>( TEMPLATEPATH.<span class="string">'/function-admin.php'</span> );</div><div class="line">    <span class="variable">$theme_option</span> = <span class="keyword">new</span> theme_option();</div><div class="line">}</div></pre></td></tr></table></figure></code></pre>
<p>接著在<code>function-admin.php</code>建立<code>class</code>，以下以<code>theme_option</code>為例：

</p>
<pre><code class="lang-php"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div><div class="line-number">15</div><div class="line-number">16</div><div class="line-number">17</div><div class="line-number">18</div><div class="line-number">19</div><div class="line-number">20</div><div class="line-number">21</div><div class="line-number">22</div><div class="line-number">23</div><div class="line-number">24</div><div class="line-number">25</div><div class="line-number">26</div><div class="line-number">27</div><div class="line-number">28</div><div class="line-number">29</div><div class="line-number">30</div><div class="line-number">31</div><div class="line-number">32</div><div class="line-number">33</div><div class="line-number">34</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">theme_option</span> {</span></div><div class="line">    <span class="comment">// 建立選項區段</span></div><div class="line">    <span class="keyword">private</span> <span class="variable">$sections</span>;</div><div class="line">    <span class="comment">// 各個選項的預設值</span></div><div class="line">    <span class="keyword">private</span> <span class="variable">$defaults</span> = <span class="keyword">array</span>(</div><div class="line">        <span class="string">'test_checkbox'</span> => <span class="string">'0'</span>, <span class="comment">// 0 為停用，1 為啟用</span></div><div class="line">        <span class="string">'test_text'</span> => <span class="string">''</span>,</div><div class="line">        <span class="string">'test_select'</span> => <span class="string">'one'</span>,</div><div class="line">        <span class="string">'test_radio'</span> => <span class="string">'one'</span>,</div><div class="line">        <span class="string">'test_textarea'</span> => <span class="string">''</span></div><div class="line">    );</div><div class="line">    <span class="comment">// checkbox的陣列，如果選項類型是 checkbox 的話，可能會出一些 "Undefined Index" 的問題，所以需要特別處理</span></div><div class="line">    <span class="keyword">private</span> <span class="variable">$checkboxes</span>;</div><div class="line">    <span class="comment">// 初始化</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> {</span></div><div class="line">        <span class="variable">$this</span>->checkboxes = <span class="keyword">array</span>();</div><div class="line">        <span class="variable">$this</span>->sections[<span class="string">'general'</span>] = <span class="string">'General'</span>;</div><div class="line">        <span class="variable">$this</span>->sections[<span class="string">'reading'</span>] = <span class="string">'Reading'</span>;</div><div class="line">        <span class="variable">$this</span>->sections[<span class="string">'other'</span>] = <span class="string">'Other'</span>;</div><div class="line">        <span class="comment">// 將各個選項的預設值寫入資料庫</span></div><div class="line">        <span class="variable">$DBOptions</span> = get_option(<span class="string">'pixiv_options'</span>);</div><div class="line">        <span class="variable">$defaults</span> = <span class="variable">$this</span>->defaults;</div><div class="line">        <span class="keyword">if</span> ( !is_array(<span class="variable">$DBOptions</span>) ) <span class="variable">$DBOptions</span> = <span class="keyword">array</span>();</div><div class="line">        <span class="keyword">foreach</span> ( <span class="variable">$DBOptions</span> <span class="keyword">as</span> <span class="variable">$key</span> => <span class="variable">$value</span> ) {</div><div class="line">            <span class="keyword">if</span> ( <span class="keyword">isset</span>(<span class="variable">$DBOptions</span>[<span class="variable">$key</span>]) )</div><div class="line">                <span class="variable">$defaults</span>[<span class="variable">$key</span>] = <span class="variable">$DBOptions</span>[<span class="variable">$key</span>];</div><div class="line">        }</div><div class="line">        update_option(<span class="string">'pixiv_options'</span>, <span class="variable">$defaults</span>);</div><div class="line">        add_action( <span class="string">'admin_menu'</span>, <span class="keyword">array</span>( &amp;<span class="variable">$this</span>, <span class="string">'add_pages'</span> ) );</div><div class="line">        add_action( <span class="string">'admin_init'</span>, <span class="keyword">array</span>( &amp;<span class="variable">$this</span>, <span class="string">'register_settings'</span> ) );</div><div class="line">    }</div><div class="line">}</div><div class="line"><span class="preprocessor">?></span></div></pre></td></tr></table></figure></code></pre>
<p>初始化完成後，接著就可邁入下一個步驟「<strong>註冊設定</strong>」。

</p>
<h2>註冊設定</h2>
<p>為了要讓佈景選項出現在選單上，新增一個名為<code>add_pages</code>的函數：

</p>
<pre><code class="lang-php"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_pages</span><span class="params">()</span> {</span></div><div class="line">    <span class="variable">$admin_page</span> = add_theme_page( <span class="string">'Theme Options'</span>, <span class="string">'Theme Options'</span>, <span class="string">'edit_theme_options'</span>, <span class="string">'test-settings'</span>, <span class="keyword">array</span>( &amp;<span class="variable">$this</span>, <span class="string">'display_page'</span> ) );</div><div class="line">}</div></pre></td></tr></table></figure></code></pre>
<p>Settings API 的設計雖然提供了一個更簡單的註冊設定的方式，但那僅限於選項很少的時候，若是 Pixiv Custom 這種選項數高達 51 項的主題就不可能一項一項編寫、呼叫個別的函數了，所以我們建立名為<code>create_setting</code>的函數，以精簡、整齊代碼。

</p>
<pre><code class="lang-php"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div><div class="line-number">15</div><div class="line-number">16</div><div class="line-number">17</div><div class="line-number">18</div><div class="line-number">19</div><div class="line-number">20</div><div class="line-number">21</div><div class="line-number">22</div><div class="line-number">23</div><div class="line-number">24</div><div class="line-number">25</div><div class="line-number">26</div><div class="line-number">27</div><div class="line-number">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create_setting</span><span class="params">( <span class="variable">$args</span> = array<span class="params">()</span> )</span> {</span></div><div class="line">    <span class="variable">$defaults</span> = <span class="keyword">array</span>(</div><div class="line">        <span class="string">'id'</span>        => <span class="string">''</span>, <span class="comment">// 選項 id</span></div><div class="line">        <span class="string">'title'</span>        => <span class="string">''</span>, <span class="comment">// 選項標題</span></div><div class="line">        <span class="string">'desc'</span>        => <span class="string">''</span>, <span class="comment">// 選項敘述</span></div><div class="line">        <span class="string">'type'</span>        => <span class="string">'text'</span>, <span class="comment">// 選項類型</span></div><div class="line">        <span class="string">'section'</span>    => <span class="string">'general'</span>, <span class="comment">// 選項區段（__construct函數中所設定的參數）</span></div><div class="line">        <span class="string">'choices'</span>    => <span class="keyword">array</span>(), <span class="comment">// 選項分支（供radio, select用）</span></div><div class="line">        <span class="string">'class'</span>        => <span class="string">''</span>, <span class="comment">// 選項 class</span></div><div class="line">        <span class="string">'before'</span>    => <span class="string">''</span>, <span class="comment">// 選項前的文字</span></div><div class="line">        <span class="string">'after'</span>        => <span class="string">''</span> <span class="comment">// 選項後的文字</span></div><div class="line">    );</div><div class="line">    extract( wp_parse_args( <span class="variable">$args</span>, <span class="variable">$defaults</span> ) );</div><div class="line">    <span class="variable">$field_args</span> = <span class="keyword">array</span>(</div><div class="line">        <span class="string">'type'</span>        => <span class="variable">$type</span>,</div><div class="line">        <span class="string">'id'</span>        => <span class="variable">$id</span>,</div><div class="line">        <span class="string">'desc'</span>        => <span class="variable">$desc</span>,</div><div class="line">        <span class="string">'choices'</span>    => <span class="variable">$choices</span>,</div><div class="line">        <span class="string">'label_for'</span>    => <span class="variable">$id</span>,</div><div class="line">        <span class="string">'class'</span>        => <span class="variable">$class</span>,</div><div class="line">        <span class="string">'before'</span>    => <span class="variable">$before</span>,</div><div class="line">        <span class="string">'after'</span>        => <span class="variable">$after</span></div><div class="line">    );</div><div class="line">    add_settings_field( <span class="variable">$id</span>, <span class="variable">$title</span>, <span class="keyword">array</span>( <span class="variable">$this</span>, <span class="string">'display_settings'</span> ), <span class="string">'test-settings'</span>, <span class="variable">$section</span>, <span class="variable">$field_args</span> );</div><div class="line">    <span class="comment">// 若選項類型為checkbox，將其加入checkboxes陣列</span></div><div class="line">    <span class="keyword">if</span> ( <span class="variable">$type</span> = <span class="string">'checkbox'</span> )</div><div class="line">        <span class="variable">$this</span>->checkboxes[] = <span class="variable">$id</span>;</div><div class="line">}</div></pre></td></tr></table></figure></code></pre>
<p>若陣列內容為空白，則會依照<code>defaults</code>來建立選項。可依個人使用的不同，加入或刪除變數。

</p>
<p>接著就得分別填入每個選項的參數了，建立一個名為<code>register_settings</code>的函數。

</p>
<pre><code class="lang-php"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div><div class="line-number">15</div><div class="line-number">16</div><div class="line-number">17</div><div class="line-number">18</div><div class="line-number">19</div><div class="line-number">20</div><div class="line-number">21</div><div class="line-number">22</div><div class="line-number">23</div><div class="line-number">24</div><div class="line-number">25</div><div class="line-number">26</div><div class="line-number">27</div><div class="line-number">28</div><div class="line-number">29</div><div class="line-number">30</div><div class="line-number">31</div><div class="line-number">32</div><div class="line-number">33</div><div class="line-number">34</div><div class="line-number">35</div><div class="line-number">36</div><div class="line-number">37</div><div class="line-number">38</div><div class="line-number">39</div><div class="line-number">40</div><div class="line-number">41</div><div class="line-number">42</div><div class="line-number">43</div><div class="line-number">44</div><div class="line-number">45</div><div class="line-number">46</div><div class="line-number">47</div><div class="line-number">48</div><div class="line-number">49</div><div class="line-number">50</div><div class="line-number">51</div><div class="line-number">52</div><div class="line-number">53</div><div class="line-number">54</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register_settings</span><span class="params">()</span> {</span></div><div class="line">    register_setting( <span class="string">'test_options'</span>, <span class="string">'test_options'</span>, <span class="keyword">array</span>( &amp;<span class="variable">$this</span>, <span class="string">'validate_settings'</span> ) );</div><div class="line">    <span class="comment">// 新增選項區段</span></div><div class="line">    <span class="keyword">foreach</span> ( <span class="variable">$this</span>->sections <span class="keyword">as</span> <span class="variable">$slug</span> => <span class="variable">$title</span> )</div><div class="line">        add_settings_section( <span class="variable">$slug</span>, <span class="string">''</span>, <span class="keyword">array</span>( &amp;<span class="variable">$this</span>, <span class="string">'display_section'</span> ), <span class="string">'test-settings'</span> );</div><div class="line">    <span class="comment">// checkbox 設定</span></div><div class="line">    <span class="variable">$this</span>->create_setting( <span class="keyword">array</span> (</div><div class="line">        <span class="string">'id'</span>        => <span class="string">'test_checkbox'</span>,</div><div class="line">        <span class="string">'title'</span>        => <span class="string">'Test Checkbox'</span>,</div><div class="line">        <span class="string">'desc'</span>        => <span class="string">'Test Checkbox'</span>,</div><div class="line">        <span class="string">'type'</span>        => <span class="string">'checkbox'</span>,</div><div class="line">        <span class="string">'section'</span>    => <span class="string">'general'</span></div><div class="line">    ) );</div><div class="line">    <span class="comment">// text 設定</span></div><div class="line">    <span class="variable">$this</span>->create_setting( <span class="keyword">array</span> (</div><div class="line">        <span class="string">'id'</span>        => <span class="string">'test_text'</span>,</div><div class="line">        <span class="string">'title'</span>        => <span class="string">'Test Text'</span>,</div><div class="line">        <span class="string">'desc'</span>        => <span class="string">'Test Text'</span>,</div><div class="line">        <span class="string">'type'</span>        => <span class="string">'text'</span>,</div><div class="line">        <span class="string">'section'</span>    => <span class="string">'general'</span></div><div class="line">    ) );</div><div class="line">    <span class="comment">// select 設定</span></div><div class="line">    <span class="variable">$this</span>->create_setting( <span class="keyword">array</span> (</div><div class="line">        <span class="string">'id'</span>        => <span class="string">'test_select'</span>,</div><div class="line">        <span class="string">'title'</span>        => <span class="string">'Test Select'</span>,</div><div class="line">        <span class="string">'desc'</span>        => <span class="string">'Test Select'</span>,</div><div class="line">        <span class="string">'type'</span>        => <span class="string">'select'</span>,</div><div class="line">        <span class="string">'section'</span>    => <span class="string">'general'</span>,</div><div class="line">        <span class="string">'choices'</span>    => <span class="keyword">array</span>(</div><div class="line">            <span class="string">'one'</span>    => <span class="string">'Option One'</span>,</div><div class="line">            <span class="string">'two'</span>    => <span class="string">'Option Two'</span></div><div class="line">        )</div><div class="line">    ) );</div><div class="line">    <span class="comment">// radio 設定</span></div><div class="line">    <span class="variable">$this</span>->create_setting( <span class="keyword">array</span> (</div><div class="line">        <span class="string">'id'</span>        => <span class="string">'test_radio'</span>,</div><div class="line">        <span class="string">'title'</span>        => <span class="string">'Test Radio'</span>,</div><div class="line">        <span class="string">'desc'</span>        => <span class="string">'Test Raio'</span>,</div><div class="line">        <span class="string">'type'</span>        => <span class="string">'radio'</span>,</div><div class="line">        <span class="string">'section'</span>    => <span class="string">'general'</span>,</div><div class="line">        <span class="string">'choices'</span>    => <span class="keyword">array</span>(</div><div class="line">            <span class="string">'one'</span>    => <span class="string">'Option One'</span>,</div><div class="line">            <span class="string">'two'</span>    => <span class="string">'Option Two'</span></div><div class="line">        )</div><div class="line">    ) );</div><div class="line">    <span class="comment">// textarea 設定</span></div><div class="line">    <span class="variable">$this</span>->create_setting( <span class="keyword">array</span> (</div><div class="line">        <span class="string">'id'</span>        => <span class="string">'test_textarea'</span>,</div><div class="line">        <span class="string">'title'</span>        => <span class="string">'Test Textarea'</span>,</div><div class="line">        <span class="string">'desc'</span>        => <span class="string">'Test Textarea'</span>,</div><div class="line">        <span class="string">'type'</span>        => <span class="string">'textarea'</span>,</div><div class="line">        <span class="string">'section'</span>    => <span class="string">'general'</span></div><div class="line">    ) );</div><div class="line">}</div></pre></td></tr></table></figure></code></pre>
<p>到了這裡，只不過是設定了各個選項的數值罷了，選項頁面還是一片空白，喝點水休息一下，下一步就要正式設定選項頁面的內容了。

</p>
<h2>顯示頁面</h2>
<p>首先，新增一個名為<code>display_page</code>的函數。

</p>
<pre><code class="lang-php"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div><div class="line-number">15</div><div class="line-number">16</div><div class="line-number">17</div><div class="line-number">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display_page</span><span class="params">()</span> {</span> <span class="preprocessor">?></span></div><div class="line">    &lt;div class=<span class="string">"wrap"</span>></div><div class="line">        &lt;div class=<span class="string">"icon32"</span> id=<span class="string">"icon-themes"</span>>&lt;/div></div><div class="line">        &lt;h2>Theme Options&lt;/h2></div><div class="line">        &lt;form action=<span class="string">"options.php"</span> method=<span class="string">"post"</span> id=<span class="string">"test_admin"</span> enctype=<span class="string">"multipart/form-data"</span>></div><div class="line">            <span class="preprocessor">&lt;?php</span></div><div class="line">            <span class="keyword">if</span> ( <span class="keyword">isset</span>( <span class="variable">$_GET</span>[<span class="string">'settings-updated'</span>] ) )</div><div class="line">                <span class="keyword">echo</span> <span class="string">'&lt;div class="updated fade">&lt;p>&lt;strong>Settings saved.&lt;/strong>&lt;/p>'</span>;</div><div class="line">            <span class="preprocessor">?></span></div><div class="line">            <span class="preprocessor">&lt;?php</span></div><div class="line">            settings_fields(<span class="string">'test_options'</span>);</div><div class="line">            do_settings_sections( <span class="variable">$_GET</span>[<span class="string">'page'</span>] );</div><div class="line">            <span class="preprocessor">?></span></div><div class="line">            &lt;input type=<span class="string">"submit"</span> name=<span class="string">"test_options[submit]"</span> class=<span class="string">"button-primary"</span> value=<span class="string">"&lt;?php esc_attr_e('Save Changes', 'test'); ?>"</span> /></div><div class="line">            &lt;input type=<span class="string">"submit"</span> name=<span class="string">"test_options[reset]"</span> class=<span class="string">"button-secondary"</span> onclick=<span class="string">"if(confirm('Are you Sure?')) return true; else return false;"</span> value=<span class="string">"&lt;?php esc_attr_e('Reset to Deafults', 'test'); ?>"</span> /></div><div class="line">        &lt;/form></div><div class="line">    &lt;/div></div><div class="line"><span class="preprocessor">&lt;?php</span> }</div></pre></td></tr></table></figure></code></pre>
<p>接著新增一個名為<code>display_section</code>的函數，該函數內容可以為空，也可以設定一些文字、HTML 內容等，輸出的內容會顯示在每個區段的最上方。

</p>
<pre><code class="lang-php"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display_section</span><span class="params">()</span> {</span></div><div class="line">    <span class="comment">// whatever</span></div><div class="line">}</div></pre></td></tr></table></figure></code></pre>
<h2>顯示選項</h2>
<p>到目前為止，主題選項頁面還是一片白，加入<code>display_settings</code>函數後，主題選項頁面就擁有最基礎的樣貌了。

</p>
<pre><code class="lang-php"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div><div class="line-number">15</div><div class="line-number">16</div><div class="line-number">17</div><div class="line-number">18</div><div class="line-number">19</div><div class="line-number">20</div><div class="line-number">21</div><div class="line-number">22</div><div class="line-number">23</div><div class="line-number">24</div><div class="line-number">25</div><div class="line-number">26</div><div class="line-number">27</div><div class="line-number">28</div><div class="line-number">29</div><div class="line-number">30</div><div class="line-number">31</div><div class="line-number">32</div><div class="line-number">33</div><div class="line-number">34</div><div class="line-number">35</div><div class="line-number">36</div><div class="line-number">37</div><div class="line-number">38</div><div class="line-number">39</div><div class="line-number">40</div><div class="line-number">41</div><div class="line-number">42</div><div class="line-number">43</div><div class="line-number">44</div><div class="line-number">45</div><div class="line-number">46</div><div class="line-number">47</div><div class="line-number">48</div><div class="line-number">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display_settings</span><span class="params">( <span class="variable">$args</span> = array<span class="params">()</span> )</span> {</span></div><div class="line">    extract( <span class="variable">$args</span> );</div><div class="line">    <span class="comment">// 取得資料庫內的現有選項</span></div><div class="line">    <span class="variable">$options</span> = get_option(<span class="string">'test_options'</span>);</div><div class="line">    <span class="comment">// 以下顯示 register_settings 內所設定的選項參數</span></div><div class="line">    <span class="comment">// 如果設定了 class 參數，顯示 class 參數</span></div><div class="line">    <span class="keyword">if</span> ( <span class="variable">$class</span> != <span class="string">''</span> )</div><div class="line">        <span class="keyword">echo</span> <span class="string">'&lt;div class="'</span> . <span class="variable">$class</span> . <span class="string">'">'</span>;</div><div class="line">    <span class="comment">// 如果設定了選項敘述，顯示選項敘述</span></div><div class="line">    <span class="keyword">if</span> ( <span class="variable">$desc</span> != <span class="string">''</span> )</div><div class="line">        <span class="keyword">echo</span> <span class="variable">$desc</span> . <span class="string">'&lt;br />'</span>;</div><div class="line">    <span class="comment">// 如果設定了 before 參數，在選項前顯示 before 參數</span></div><div class="line">    <span class="keyword">if</span> ( <span class="variable">$before</span> != <span class="string">''</span> )</div><div class="line">        <span class="keyword">echo</span> <span class="string">'&lt;label for="'</span> . <span class="variable">$id</span> . <span class="string">'">'</span> . <span class="variable">$before</span> . <span class="string">'&lt;/label>'</span>;</div><div class="line">    <span class="comment">// 偵測選項類型，以下內容可依個人喜好自行設定</span></div><div class="line">    <span class="keyword">switch</span> ( <span class="variable">$type</span> ) {</div><div class="line">        <span class="keyword">case</span> <span class="string">'checkbox'</span>:</div><div class="line">            <span class="keyword">echo</span> <span class="string">'&lt;input type="checkbox" id="'</span> . <span class="variable">$id</span> . <span class="string">'" name="test_options['</span> . <span class="variable">$id</span> . <span class="string">']" value="1"'</span>.checked( <span class="variable">$options</span>[<span class="variable">$id</span>], <span class="number">1</span>, <span class="keyword">false</span> ) . <span class="string">' />'</span>;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'select'</span>:</div><div class="line">            <span class="keyword">echo</span> <span class="string">'&lt;select name="test_options['</span> . <span class="variable">$id</span> . <span class="string">']">'</span>;</div><div class="line">            <span class="keyword">foreach</span> ( <span class="variable">$choices</span> <span class="keyword">as</span> <span class="variable">$value</span> => <span class="variable">$label</span> )</div><div class="line">                <span class="keyword">echo</span> <span class="string">'&lt;option value="'</span> . <span class="variable">$value</span> . <span class="string">'"'</span> . selected( <span class="variable">$options</span>[<span class="variable">$id</span>], <span class="variable">$value</span>, <span class="keyword">false</span> ) . <span class="string">'>'</span> . <span class="variable">$label</span> . <span class="string">'&lt;/option>'</span>;</div><div class="line">            <span class="keyword">echo</span> <span class="string">'&lt;/select>'</span>;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'radio'</span>:</div><div class="line">            <span class="variable">$i</span> = <span class="number">0</span>;</div><div class="line">            <span class="keyword">foreach</span> ( <span class="variable">$choices</span> <span class="keyword">as</span> <span class="variable">$value</span> => <span class="variable">$label</span> ) {</div><div class="line">                <span class="keyword">echo</span> <span class="string">'&lt;input type="radio" name="test_options['</span> . <span class="variable">$id</span> . <span class="string">']" id="'</span> . <span class="variable">$id</span> . <span class="variable">$i</span> . <span class="string">'" value="'</span> . <span class="variable">$value</span> . <span class="string">'"'</span>. checked( <span class="variable">$options</span>[<span class="variable">$id</span>], <span class="variable">$value</span>, <span class="keyword">false</span> ) . <span class="string">' />&lt;label for="'</span> . <span class="variable">$id</span> . <span class="string">'">'</span> . <span class="variable">$label</span> . <span class="string">'&lt;/label>'</span>;</div><div class="line">                <span class="keyword">if</span>( <span class="variable">$i</span> &lt; count(<span class="variable">$options</span>) - <span class="number">1</span> )</div><div class="line">                    <span class="keyword">echo</span> <span class="string">'&lt;br />'</span>;</div><div class="line">                <span class="variable">$i</span>++;</div><div class="line">            }</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'textarea'</span>:</div><div class="line">            <span class="keyword">echo</span> <span class="string">'&lt;textarea id="'</span> . <span class="variable">$id</span> . <span class="string">'" name="test_options['</span> . <span class="variable">$id</span> . <span class="string">']" cols="95%" rows="10">'</span> . <span class="variable">$options</span>[<span class="variable">$id</span>] . <span class="string">'&lt;/textarea>'</span>;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'text'</span>:</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            <span class="keyword">echo</span> <span class="string">'&lt;input type="text" id="'</span> . <span class="variable">$id</span> . <span class="string">'" name="test_options['</span> . <span class="variable">$id</span> . <span class="string">']" value="'</span> . <span class="variable">$options</span>[<span class="variable">$id</span>] . <span class="string">'" maxlength="'</span> . <span class="variable">$maxlength</span> . <span class="string">'" />'</span>;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    }</div><div class="line">    <span class="comment">// 如果設定了 after 參數，在選項後顯示 after 參數</span></div><div class="line">    <span class="keyword">if</span> ( <span class="variable">$after</span> != <span class="string">''</span> )</div><div class="line">        <span class="keyword">echo</span> <span class="string">'&lt;label for="'</span> . <span class="variable">$id</span> . <span class="string">'">'</span> . <span class="variable">$after</span> . <span class="string">'&lt;/label>'</span>;</div><div class="line">    <span class="comment">// 如果設定了 class 參數，以 div 包含選項</span></div><div class="line">    <span class="keyword">if</span> ( <span class="variable">$class</span> != <span class="string">''</span> )</div><div class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/div>'</span>;</div><div class="line">}</div></pre></td></tr></table></figure></code></pre>
<p>設定完成後，主題選項頁面就不再孤寥無幾了，但儲存似乎有些問題？沒錯，因為 Settings API 在<code>checkbox</code>的處理上有些問題，<code>checkbox</code>若停用就不會將數值寫入資料庫了，所以我們必須在選項儲存前先進行驗證，把停用的<code>checkbox</code>值補上<code>0</code>，此外，目前重設按鈕也沒有反應，也必須透過同樣的方式，事先偵測輸入值，若使用者按下重設按鈕，則拋棄現有設定，將開頭所設定的<code>defaults</code>變數寫入資料庫。

</p>
<pre><code class="lang-php"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div><div class="line-number">15</div><div class="line-number">16</div><div class="line-number">17</div><div class="line-number">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">validate_settings</span><span class="params">( <span class="variable">$input</span> )</span> {</span></div><div class="line">    <span class="variable">$options</span> = get_option(<span class="string">'test_options'</span>);</div><div class="line">    <span class="variable">$valid_input</span> = <span class="variable">$options</span>;</div><div class="line">    <span class="variable">$submit</span> = ( ! <span class="keyword">empty</span>( <span class="variable">$input</span>[<span class="string">'submit'</span>] ) ? <span class="keyword">true</span> : <span class="keyword">false</span> );</div><div class="line">    <span class="variable">$reset</span> = ( ! <span class="keyword">empty</span>( <span class="variable">$input</span>[<span class="string">'reset'</span>] ) ? <span class="keyword">true</span> : <span class="keyword">false</span> );</div><div class="line">    <span class="keyword">if</span> ( <span class="variable">$submit</span> ) {</div><div class="line">        <span class="comment">// 若 checkbox 停用，補 "0" 儲存至資料庫</span></div><div class="line">        <span class="keyword">foreach</span> ( <span class="variable">$this</span>->checkboxes <span class="keyword">as</span> <span class="variable">$id</span> ) {</div><div class="line">            <span class="keyword">if</span> ( <span class="keyword">isset</span>( <span class="variable">$options</span>[<span class="variable">$id</span>] ) &amp;&amp; ! <span class="keyword">isset</span>( <span class="variable">$input</span>[<span class="variable">$id</span>] ) )</div><div class="line">                <span class="variable">$input</span>[<span class="variable">$id</span>] = <span class="string">'0'</span>;</div><div class="line">        }</div><div class="line">        <span class="variable">$valid_input</span> = <span class="variable">$input</span>;</div><div class="line">    } <span class="keyword">elseif</span> ( <span class="variable">$reset</span> ) {</div><div class="line">        <span class="comment">// 使用事先設定的預設值寫入資料庫</span></div><div class="line">        <span class="variable">$valid_input</span> = <span class="variable">$this</span>->defaults;</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> <span class="variable">$valid_input</span>;</div><div class="line">}</div></pre></td></tr></table></figure></code></pre>
<h2>自定 JavaScript 與 CSS 樣式</h2>
<p>如果只是基本的主題選項的話，第四步便可以宣告結束了，但如果想要進一步的設定 Javascript 與 CSS 樣式呢？你可以加入以下的函數，直接引入外部檔案，或是直接寫在 PHP 檔案也可以。<br><em>※ 附註：若直接使用 $ 當作 jQuery 標籤的話，可能會有衝突問題，請使用其他字串代替，或改為<code>jQuery(document).ready(function($){...});</code></em>

</p>
<pre><code class="lang-php"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">styles</span><span class="params">()</span> {</span></div><div class="line">    wp_enqueue_style(<span class="string">'testAdminCSS'</span>, get_template_directory_uri().<span class="string">'/admin/admin.css'</span>);</div><div class="line">}</div><div class="line"><span class="comment">// 引入 Javascript</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">scripts</span><span class="params">()</span> {</span></div><div class="line">    wp_enqueue_script(<span class="string">'testAdminJS'</span>, get_template_directory_uri().<span class="string">'/admin/admin.js'</span>);</div><div class="line">}</div></pre></td></tr></table></figure></code></pre>
<p>然後在<code>add_pages</code>函數中，加入以下程式碼，就可成功引入 CSS 與 Javascript 了。

</p>
<pre><code class="lang-php"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div></pre></td><td class="code"><pre><div class="line">add_action( <span class="string">'admin_print_scripts-'</span> . <span class="variable">$admin_page</span>, <span class="keyword">array</span>( &amp;<span class="variable">$this</span>, <span class="string">'scripts'</span> ) );</div><div class="line">add_action( <span class="string">'admin_print_styles-'</span> . <span class="variable">$admin_page</span>, <span class="keyword">array</span>( &amp;<span class="variable">$this</span>, <span class="string">'styles'</span> ) );</div></pre></td></tr></table></figure></code></pre>
<p>那麼該如何做出Pixiv Custom式樣的分頁呢？因為我PHP功力差，所以主要透過Javascript來包裝，你或許會有更好的方法也說不定。
首先，修改<code>display_page</code>函數，在你喜歡的地方加入以下程式碼：

</p>
<pre><code class="lang-html"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"test_switch"</span>></span></div><div class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">id</span>=<span class="value">"tab0"</span>></span>分頁 1<span class="tag">&lt;/<span class="title">a</span>></span></div><div class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">id</span>=<span class="value">"tab1"</span>></span>分頁 2<span class="tag">&lt;/<span class="title">a</span>></span></div><div class="line"><span class="comment">&lt;!-- 依此類推... --></span></div><div class="line"><span class="tag">&lt;/<span class="title">div</span>></span></div></pre></td></tr></table></figure></code></pre>
<p>這樣選項頁面就會出現各個區段的連結文字了，接下來只要透過 Javascript 包裝表格，搭配 CSS 控制表格顯示即可。<br><em>※ ID必須符合<code>__construct</code>函數中的參數，前面再加上上述程式碼的前綴字元。</em>

</p>
<pre><code class="lang-js"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div><div class="line-number">15</div><div class="line-number">16</div><div class="line-number">17</div><div class="line-number">18</div><div class="line-number">19</div><div class="line-number">20</div><div class="line-number">21</div><div class="line-number">22</div><div class="line-number">23</div><div class="line-number">24</div><div class="line-number">25</div><div class="line-number">26</div><div class="line-number">27</div><div class="line-number">28</div><div class="line-number">29</div><div class="line-number">30</div><div class="line-number">31</div><div class="line-number">32</div><div class="line-number">33</div><div class="line-number">34</div><div class="line-number">35</div><div class="line-number">36</div><div class="line-number">37</div><div class="line-number">38</div><div class="line-number">39</div><div class="line-number">40</div><div class="line-number">41</div><div class="line-number">42</div><div class="line-number">43</div><div class="line-number">44</div><div class="line-number">45</div><div class="line-number">46</div><div class="line-number">47</div><div class="line-number">48</div><div class="line-number">49</div><div class="line-number">50</div><div class="line-number">51</div><div class="line-number">52</div><div class="line-number">53</div><div class="line-number">54</div><div class="line-number">55</div><div class="line-number">56</div><div class="line-number">57</div><div class="line-number">58</div><div class="line-number">59</div><div class="line-number">60</div><div class="line-number">61</div></pre></td><td class="code"><pre><div class="line">jQuery(document).ready(<span class="keyword">function</span>($){</div><div class="line">    <span class="keyword">var</span> cookie = $.cookie(<span class="string">'pixiv_tabs'</span>) || <span class="number">0</span>;</div><div class="line">    showTab(cookie);</div><div class="line">    $(<span class="string">"#pixiv_switch a"</span>).click(<span class="keyword">function</span>(){</div><div class="line">        <span class="keyword">var</span> tab = $(<span class="keyword">this</span>).prop(<span class="string">'id'</span>).replace(<span class="regexp">/tab/</span>,<span class="string">''</span>);</div><div class="line">        showTab(tab);</div><div class="line">    });</div><div class="line">});</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">showTab</span><span class="params">(id)</span>{</span></div><div class="line">    jQuery(<span class="string">'#test_switch a'</span>).removeClass(<span class="string">'current'</span>);</div><div class="line">    jQuery(<span class="string">'#test_switch a'</span>).eq(id).addClass(<span class="string">'current'</span>);</div><div class="line">    jQuery(<span class="string">'form#test table'</span>).hide();</div><div class="line">    jQuery(<span class="string">'form#test table'</span>).eq(id).fadeIn();</div><div class="line">    jQuery.cookie(<span class="string">'test_tabs'</span>,id,{expires: <span class="number">0.5</span>});</div><div class="line">}</div><div class="line"><span class="comment">/**</div><div class="line"> * Cookie plugin</div><div class="line"> *</div><div class="line"> * Copyright (c) 2006 Klaus Hartl (stilbuero.de)</div><div class="line"> * Dual licensed under the MIT and GPL licenses:</div><div class="line"> * http://www.opensource.org/licenses/mit-license.php</div><div class="line"> * http://www.gnu.org/licenses/gpl.html</div><div class="line"> *</div><div class="line"> */</span></div><div class="line">jQuery.cookie = <span class="keyword">function</span>(name, value, options) {</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> value != <span class="string">'undefined'</span>) {</div><div class="line">        options = options || {};</div><div class="line">        <span class="keyword">if</span> (value === <span class="literal">null</span>) {</div><div class="line">            value = <span class="string">''</span>;</div><div class="line">            options.expires = -<span class="number">1</span>;</div><div class="line">        }</div><div class="line">        <span class="keyword">var</span> expires = <span class="string">''</span>;</div><div class="line">        <span class="keyword">if</span> (options.expires &amp;&amp; (<span class="keyword">typeof</span> options.expires == <span class="string">'number'</span> || options.expires.toUTCString)) {</div><div class="line">            <span class="keyword">var</span> date;</div><div class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> options.expires == <span class="string">'number'</span>) {</div><div class="line">                date = <span class="keyword">new</span> Date();</div><div class="line">                date.setTime(date.getTime() + (options.expires * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>));</div><div class="line">            } <span class="keyword">else</span> {</div><div class="line">                date = options.expires;</div><div class="line">            }</div><div class="line">            expires = <span class="string">'; expires='</span> + date.toUTCString();</div><div class="line">        }</div><div class="line">        <span class="keyword">var</span> path = options.path ? <span class="string">'; path='</span> + (options.path) : <span class="string">''</span>;</div><div class="line">        <span class="keyword">var</span> domain = options.domain ? <span class="string">'; domain='</span> + (options.domain) : <span class="string">''</span>;</div><div class="line">        <span class="keyword">var</span> secure = options.secure ? <span class="string">'; secure'</span> : <span class="string">''</span>;</div><div class="line">        document.cookie = [name, <span class="string">'='</span>, encodeURIComponent(value), expires, path, domain, secure].join(<span class="string">''</span>);</div><div class="line">    } <span class="keyword">else</span> {</div><div class="line">        <span class="keyword">var</span> cookieValue = <span class="literal">null</span>;</div><div class="line">        <span class="keyword">if</span> (document.cookie &amp;&amp; document.cookie != <span class="string">''</span>) {</div><div class="line">            <span class="keyword">var</span> cookies = document.cookie.split(<span class="string">';'</span>);</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cookies.length; i++) {</div><div class="line">                <span class="keyword">var</span> cookie = jQuery.trim(cookies[i]);</div><div class="line">                <span class="keyword">if</span> (cookie.substring(<span class="number">0</span>, name.length + <span class="number">1</span>) == (name + <span class="string">'='</span>)) {</div><div class="line">                    cookieValue = decodeURIComponent(cookie.substring(name.length + <span class="number">1</span>));</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                }</div><div class="line">            }</div><div class="line">        }</div><div class="line">        <span class="keyword">return</span> cookieValue;</div><div class="line">    }</div><div class="line">};</div></pre></td></tr></table></figure></code></pre>
<h2>套用</h2>
<p>這個步驟相對而言就比較簡單了，首先在想要套用選項的位置加入以下程式碼，並設定

</p>
<pre><code class="lang-php"><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div><div class="line-number">2</div><div class="line-number">3</div><div class="line-number">4</div><div class="line-number">5</div><div class="line-number">6</div><div class="line-number">7</div><div class="line-number">8</div><div class="line-number">9</div><div class="line-number">10</div><div class="line-number">11</div><div class="line-number">12</div><div class="line-number">13</div><div class="line-number">14</div><div class="line-number">15</div><div class="line-number">16</div><div class="line-number">17</div><div class="line-number">18</div><div class="line-number">19</div><div class="line-number">20</div><div class="line-number">21</div><div class="line-number">22</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$option</span> = get_options(<span class="string">'test_options'</span>);</div><div class="line"><span class="comment">// checkbox 的情況</span></div><div class="line"><span class="keyword">if</span> ( <span class="variable">$options</span>[<span class="string">'test_checkbox'</span>] ) {</div><div class="line">    ...</div><div class="line">} <span class="keyword">else</span> {</div><div class="line">    ...</div><div class="line">}</div><div class="line"><span class="comment">// 也可使用以下寫法</span></div><div class="line"><span class="variable">$options</span>[<span class="string">'test_checkbox'</span>] ? ... : ...;</div><div class="line"><span class="comment">// text, textarea 的情況</span></div><div class="line"><span class="keyword">if</span> ( <span class="variable">$options</span>[<span class="string">'test_text'</span>] ) {</div><div class="line">    <span class="keyword">echo</span> <span class="variable">$options</span>[<span class="string">'test_text'</span>];</div><div class="line">    ...</div><div class="line">}</div><div class="line"><span class="comment">// select, radio 的情況</span></div><div class="line"><span class="keyword">if</span> ( <span class="variable">$options</span>[<span class="string">'test_select'</span>] == <span class="string">'one'</span> ) {</div><div class="line">    ...</div><div class="line">} <span class="keyword">elseif</span> ( <span class="variable">$options</span>[<span class="string">'test_select'</span>] == <span class="string">'two'</span> ) {</div><div class="line">    ...</div><div class="line">} <span class="keyword">else</span> {</div><div class="line">    ...</div><div class="line">}</div></pre></td></tr></table></figure></code></pre>
<h2>參考出處</h2>
<p><a href="http://alisothegeek.com/2011/01/wordpress-settings-api-tutorial-1/">Extended WordPress Settings API Tutorial</a><br><a href="http://www.chipbennett.net/2011/02/17/incorporating-the-settings-api-in-wordpress-themes">Incorporating the Settings API in WordPress Themes</a><br><a href="http://codex.wordpress.org/Main_Page">WordPress Codex</a><br><a href="https://github.com/carhartl/jquery-cookie">jQuery cookie plugin</a>

</p>
<h2>後記</h2>
<p>這大概是我寫過最長的一篇文章，內容可能會有點枯燥乏味、充滿錯誤，<del>而且一張萌圖都沒有</del>，各位客倌就把這當成一篇筆記文章吧！</p>]]></content>
    <category scheme="http://zespia.tw/tags%2FWordPress" term="WordPress"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Pixiv Custom 2.0 更新！代碼更精簡，功能更豐富！]]></title>
    <link href="http://zespia.tw/blog/2011/04/12/pixiv-custom-2-0-update/"/>
    <id>http://zespia.tw/blog/2011/04/12/pixiv-custom-2-0-update/</id>
    <published>2011-04-12T00:00:00.000Z</published>
    <updated>2012-09-22T01:17:46.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/iZT3XSFQ268L4.jpg" alt="其實這張圖與本文內容沒什麼關係，純粹當做福利罷了（id=18097491）">

</p>
<p>這次的更新主要就只有四個字，「<strong>精簡代碼</strong>」，讓檔案保持在上一版的大小外又<strong>新增</strong>了一些更為詳細的後台設定，廢話不多說，以下就是本次的更新內容：

</p>
<span id="more"></span>

<h2>更新記錄</h2>
<ul>
<li>2.1.5<ul>
<li><strong>修改</strong> - 搜尋建議的寬度</li>
</ul>
</li>
<li>2.1.4<ul>
<li><strong>修改</strong> - 修復 XSS 漏洞</li>
<li><strong>移除</strong> - 自定分享連結的代碼</li>
</ul>
</li>
<li>2.1.3<ul>
<li><strong>新增</strong> - 搜尋取消按鈕</li>
<li><strong>新增</strong> - 文章側邊欄也能調整至與首頁側邊欄相同的寬度</li>
<li><strong>修改</strong> - 修復後台<code>textarea</code>選項，前台顯示已編碼資料的問題</li>
<li><strong>修改</strong> - 「更多分享」的動畫</li>
</ul>
</li>
<li>2.1.2<ul>
<li><strong>新增</strong> - Google +1 按鈕</li>
<li><strong>修改</strong> - Chrome 現在也能使用自動載入功能了！</li>
<li><strong>修改</strong> - 修復 XSS 漏洞，使用<code>esc_attr</code>編碼每個選項資料</li>
<li><strong>修改</strong> - 修復留言回覆通知的內容設定無法生效的問題</li>
<li><strong>修改</strong> - 引用樣式</li>
</ul>
</li>
<li>2.1.1<ul>
<li><strong>新增</strong> - 自動載入功能 (實驗中，目前僅限 Firefox, Opera 能使用)</li>
<li><strong>新增</strong> - Google +1 按鈕</li>
</ul>
</li>
<li>2.1.0<ul>
<li><strong>新增</strong> - HTML5</li>
<li><strong>新增</strong> - 頁首選單中新增了一些預設的圖片可供使用</li>
<li><strong>修改</strong> - 簡化留言的 AJAX 程式碼，重新設計動畫，並加入了 AJAX 留言導覽</li>
<li><strong>修改</strong> - AJAX 導覽現在也能適用於彙整、分類、標籤、搜尋頁面</li>
<li><strong>移除</strong> - 自定 Logo 功能</li>
</ul>
</li>
<li>2.0.7<ul>
<li><strong>新增</strong> - 後台頁面新增「重設至預設值」功能</li>
<li><strong>修改</strong> - 改採用 Settings API 製作後台頁面，以增進安全性</li>
</ul>
</li>
<li>2.0.4<ul>
<li><strong>修改</strong> - 選單項目過多時樣式錯誤的問題</li>
</ul>
</li>
<li>2.0.2<ul>
<li><strong>修改</strong> - 增進 AJAX 導覽功能的安全性，但因此只限用於首頁導覽</li>
</ul>
</li>
<li>2.0<ul>
<li><strong>新增</strong> - AJAX 導覽功能</li>
<li><strong>新增</strong> - 選單無限深度</li>
<li><strong>新增</strong> - 新增<code>style-editor.css</code>，使用者可在後台文章編輯頁面中檢視文章的實際樣貌（調整中）</li>
<li><strong>新增</strong> - 搜尋建議開關</li>
<li><strong>新增</strong> - 連結顏色預覽</li>
<li><strong>新增</strong> - 更細部的分享按鈕設定</li>
<li><strong>新增</strong> - 留言回覆通知的設定預覽</li>
<li><strong>新增</strong> - 後台自動隱藏停用的子選項</li>
<li><strong>新增</strong> - 首頁 / 彙整頁面的文章預覽布局（完整 / 概要與縮圖 / 僅標題）</li>
<li><strong>修改</strong> - 重新編寫3欄式布局的結構，以優先載入主欄內容、加強 SEO 效能</li>
<li><strong>修改</strong> - 更改側邊欄的行為，側邊欄2尚未設定的情況下會先套用側邊欄1的內容，文章側邊欄尚未設定的情況下會先套用首頁側邊欄的內容</li>
<li><strong>修改</strong> - 文章的分類頁籤以及後台分頁頁籤的外觀</li>
<li><strong>修改</strong> - 後台英文翻譯、排版</li>
<li><strong>移除</strong> - 為了配合官方，原本的 Logo 設定功能改為進入「主題」→「頁首」設定</li>
</ul>
</li>
</ul>
<p>聽起來似乎沒什麼，事實上新增的功能也沒幾個，大部分的更動都是精簡代碼，所以為了增加霸氣，一次將版本號躍升到 2.0。（毆）相容性尚未測試，不過應該能夠完美支援除 IE 外的所有瀏覽器，如果有任何問題的話，請在下方留言吧。</p>]]></content>
    <category scheme="http://zespia.tw/tags%2FWordPress" term="WordPress"/>
    <category scheme="http://zespia.tw/tags%2F%E4%B8%BB%E9%A1%8C" term="主題"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[凱薩琳（キャサリン）]]></title>
    <link href="http://zespia.tw/blog/2011/04/10/ps3-catherine/"/>
    <id>http://zespia.tw/blog/2011/04/10/ps3-catherine/</id>
    <published>2011-04-10T00:00:00.000Z</published>
    <updated>2012-09-22T01:17:11.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/iVd4RKlY7q4KD.jpg" alt="※封面僅供參考">

</p>
<p>文森特（Vincent）是個 32 歲的系統工程師，希望能夠一個人自由自在的生活。最近，凱薩琳（Katherine，簡稱 K 子）的不斷逼婚，讓文森特開始深思自己的未來，是否該找個安定的工作養活家庭？是否該停止漂泊與她共度下半輩子？

</p>
<span id="more"></span>

<p><img src="http://i.minus.com/i79JGowBHn3ir.jpg" alt="">

</p>
<p>正當文森特在酒吧買醉，一名妙齡女子，凱薩琳（Catherine，簡稱 C 子）走進了酒吧，文森特的眼球馬上就被 C 子所吸引，不小心共度了激情的一夜，優柔寡斷的文森特不知該怎麼辦，只能兩邊繼續隱瞞下去。他每夜陷入可怕的惡夢，一個懲罰對愛情不忠者的地獄，只能不斷往上爬尋求倖存，而這就是遊戲的主軸。

</p>
<p><img src="http://i.minus.com/iix5b68q5f9yo.jpg" alt="這只是一個屁股頭，絕對不是最終BOSS">

</p>
<p>隨著時間的推進，身邊同樣的遭遇者漸漸犧牲，而 K 子也發現了文森特不忠的事實，文森特越來越焦慮，好不容易終於進入了第7夜，理論上應該是惡夢的盡頭，然而醒來卻發現，C 子拿出刀子脅迫，打算殺害 K 子，然而卻不幸失手身亡，K 子感到徬徨，決定與文森特分手。

</p>
<p>文森特體認到自己不能沒有 K 子的存在，回想過去一週，發現根本沒有人知道 C 子的存在，原來她只不過是文森特心中的理想投影，一切都是店長的陰謀！文森特與店長立了約定，一旦文森特逃出惡夢，就得釋放所有人，並給文森特的戀情一個機會。

</p>
<p><img src="http://i.minus.com/ibhkh1DRRs3iBV.jpg" alt="">

</p>
<p>終於從惡夢歸來，K 子重新接納了文森特，兩人成為了戀人。（K 子 NORMAL END）

</p>
<p><blockquote>
以上是花了 11 小時以 EASY 難度完成的好人結局，老實說光是 EASY 模式就讓人有夠累了，不過身為一名神經病的自虐系玩家（ゝω・）u，目前正在以 NORMAL 模式進行人渣路線，沒有 UNDO 功能真的讓人很惱羞。
</blockquote></p>]]></content>
    <category scheme="http://zespia.tw/tags%2F%E9%81%8A%E6%88%B2" term="遊戲"/>
    <category scheme="http://zespia.tw/tags%2FPS3" term="PS3"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[XLD - Mac 的無損格式解碼器]]></title>
    <link href="http://zespia.tw/blog/2011/03/27/xld-zh-tw/"/>
    <id>http://zespia.tw/blog/2011/03/27/xld-zh-tw/</id>
    <published>2011-03-27T05:54:00.000Z</published>
    <updated>2012-09-22T01:11:29.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.minus.com/ib2AL5Hsjck8w0.jpg" alt="">

</p>
<p>這是一個專門解碼無損格式的軟體，可應用於：

</p>
<ul>
<li><a href="http://flac.sourceforge.net/">(Ogg) FLAC</a> (.flac/oga)</li>
<li><a href="http://www.monkeysaudio.com/">Monkey&#39;s Audio</a> (.ape)</li>
<li><a href="http://www.wavpack.com/">Wavpack</a> (.wv)</li>
<li><a href="http://www.true-audio.com/">TTA</a> (.tta)</li>
<li>Apple Lossless (.m4a) [10.4 以上版本]</li>
<li><a href="http://www.thbeck.de/Tak/Tak.html">TAK</a> (.tak) <a href="http://www.winehq.org/">需安裝 [Wine</a>]</li>
<li><a href="http://www.etree.org/shncom.html">Shorten</a> (.shn) [僅限於 SHN v3]</li>
<li>AIFF, WAV……等等</li>
</ul>
<p>也可以將 CD 打包成 Cue 格式，自動連接到網路上的資料庫獲取音軌名稱，直接編輯音軌的 Metadata（中繼資料），只是目前還不支援 Tak 格式。

</p>
<p><a href="http://tmkk.hp.infoseek.co.jp/xld/index.html">官方網站</a>

</p>
<span id="more"></span>

<h2>程式擷圖</h2>
<p><img src="http://i.minus.com/itsezO5FS2aoX.jpg" alt="">

</p>
<p><img src="http://i.minus.com/ibaGHVAu8fC5KX.jpg" alt="">

</p>
<p><img src="http://i.minus.com/iOgn3ETlinxU7.jpg" alt="">

</p>
<p><img src="http://i.minus.com/iPRE87tcVmQla.jpg" alt="">

</p>
<p><img src="http://i.minus.com/iAPXEbnrOiNGA.jpg" alt="">

</p>
<h2>軟體使用方式</h2>
<p><strong>重要：若要分離 ape(flac,wav,etc) + cue 檔案，請從「檔案」→「開啟…」中開啟 .cue 檔。「開啟原始 PCM (bin/cue)」只能開啟原始 PCM 處理檔 (無標頭 wav) 檔案。</strong>

</p>
<p>GUI版本的使用方式已包含在壓縮檔中的讀我檔案，以下是 Command Line 版本的使用方式：

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">% <span class="tag">xld</span> <span class="attr_selector">[-c cuesheet]</span> <span class="attr_selector">[-e]</span> <span class="attr_selector">[-f format]</span> <span class="attr_selector">[-o outpath]</span> <span class="attr_selector">[-t track]</span> <span class="tag">file</span></div></pre></td></tr></table></figure></code></pre>
<p>XLD 預設為解碼 WAVE 檔案，輸出檔案的副檔名為<code>.wav</code>，您可使用下列參數指定編碼：

</p>
<ul>
<li><code>-c cuesheet</code>: 使用<code>cue</code>檔案分離音軌，若<strong>標題</strong>或<strong>演出者</strong>已包含於<code>cue</code>檔案中，將會應用於輸出檔案的名稱。</li>
<li><code>-e</code>：從輸出檔案中排除音軌間隙。音軌間隙預設會放在音軌的最後，當<code>-c</code>未指定時，此參數會被忽略。</li>
<li><code>-f 格式</code>：指定輸出檔案的格式，您可使用<code>wav</code>. <code>aif</code>, <code>raw_big</code>, <code>raw_little</code>。</li>
<li><code>-o 輸出路徑</code>：指定輸出檔案的路徑或名稱。若輸出路徑為一資料夾，輸出檔案將會儲存於該資料夾中。</li>
<li><code>-t 音軌</code>：若您指定<code>1</code>，那麼只會解碼第 1 個音軌，同樣，若指定<code>2,4</code> 只會解碼第 2, 4 個音軌。</li>
<li><code>--raw</code>：以原始 PCM 讀取輸入檔案，您可使用以下 4 個參數。<ul>
<li><code>--取樣頻率 n</code>：設定輸入檔案的取樣頻率 (Hz)，預設為 44100 Hz。</li>
<li><code>--位元數 n</code>：設定輸入檔案的位元深度 (bit)，預設為 16 位元。</li>
<li><code>--聲道 n</code>：設定輸入檔案的聲道數量：預設為 2 聲道。</li>
<li><code>--endian little/big</code>：    設定輸入檔案的 endian，預設為<code>little</code>。</li>
</ul>
</li>
</ul>
<p><strong>舉例：</strong>

</p>
<p>將<code>hoge.flac</code>解碼為 AIFF 格式，並輸出於<code>~/Music</code>。

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">% xld -o ~<span class="regexp">/Music hoge.flac -f aif</div></pre></td></tr></table></figure></code></pre>
<p>使用 hoge.cue 分割 hoge.flac，並解碼第 1 和第 3 個音軌。

</p>
<pre><code><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line-number">1</div></pre></td><td class="code"><pre><div class="line">% xld -c hoge<span class="variable">.cue</span> -t <span class="number">1</span>,<span class="number">3</span> hoge<span class="variable">.flac</span></div></pre></td></tr></table></figure></code></pre>
<h2>教學</h2>
<ol>
<li>把下載的壓縮檔解壓縮。</li>
<li>在 XLD 按右鍵，選擇「顯示套件內容」。</li>
<li>將壓縮檔內的<code>zh_TW.iproj</code>放入<code>Content</code>→<code>Resources</code>內。</li>
<li>將壓縮檔內的<code>PlugIns</code>資料夾放入<code>Content</code>內。</li>
<li>重新開啟 XLD 即可。</li>
</ol>
<p><strong>或者，也可以直接下載完整檔案。</strong>

</p>
<h2>下載</h2>
<p>僅本地化套件 (Ver. 0.2) <a href="http://www.megaupload.com/?d=M9SNPA37"> <a href="http://www.mediafire.com/download.php?pma2m06rbgplb7a">MediaFire</a>｜[MegaUpload</a> ]

</p>
<p>完整應用程式 (Ver. 0.2) <a href="http://www.megaupload.com/?d=KH76767U"> <a href="http://www.mediafire.com/download.php?uelz7no3p4y7q8e">MediaFire</a>｜[MegaUpload</a> ]

</p>
<h2>更新記錄</h2>
<p><strong>2011/3/27</strong> XLD 20110312 (130.0) 中文化版本 Ver. 0.2 發佈，使用全新的 Cocoa UI 設計音軌列表視窗<br><strong>2010/6/6</strong> XLD 20100518 (120.3) 中文化版本 Ver. 0.1 發佈</p>]]></content>
    <category scheme="http://zespia.tw/tags%2F%E4%B8%AD%E6%96%87%E5%8C%96" term="中文化"/>
    <category scheme="http://zespia.tw/tags%2FMac" term="Mac"/>
  </entry>
</feed>
